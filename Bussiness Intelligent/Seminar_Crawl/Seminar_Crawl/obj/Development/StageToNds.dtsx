<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/13/2023 9:56:12 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-EO3ARNL"
  DTS:CreatorName="DESKTOP-EO3ARNL\hoang"
  DTS:DTSID="{A54BD3FA-EB62-4D43-8357-7F39C70EFAD1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5314.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="52"
  DTS:VersionGUID="{AA590C0F-52DC-4ACD-AD41-255A66711E13}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.SEMINAR_METADATA]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{D48A9EB8-1844-430D-B730-9FBE1CE2059D}"
      DTS:ObjectName="LocalHost.SEMINAR_METADATA">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=SEMINAR_METADATA;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{D48A9EB8-1844-430D-B730-9FBE1CE2059D}LocalHost.SEMINAR_METADATA;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0AD03B26-EAC4-4549-95F5-B35668607000}"
      DTS:ObjectName="LocalHost.SEMINAR_NDS">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=SEMINAR_NDS;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{0AD03B26-EAC4-4549-95F5-B35668607000}LocalHost.SEMINAR_NDS;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.SEMINAR_SOURCE]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{7A2DC85F-3F7C-4269-B738-FC6B51C2DBD2}"
      DTS:ObjectName="LocalHost.SEMINAR_SOURCE">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=SEMINAR_SOURCE;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{7A2DC85F-3F7C-4269-B738-FC6B51C2DBD2}LocalHost.SEMINAR_SOURCE;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0D82B8DF-B8D5-40F3-A6EF-4F412C487344}"
      DTS:ObjectName="LocalHost.SEMINAR_STAGE1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=SEMINAR_STAGE;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{0D82B8DF-B8D5-40F3-A6EF-4F412C487344}LocalHost.SEMINAR_STAGE1;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{483F5C03-39EC-4242-8D99-42B9580097BC}"
      DTS:ObjectName="LocalHost.SEMINAR_STAGE1 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=SEMINAR_STAGE;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{483F5C03-39EC-4242-8D99-42B9580097BC}LocalHost.SEMINAR_STAGE1;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B6CE0354-14D7-493A-8463-5262D1B3767C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CET">
      <DTS:VariableValue
        DTS:DataType="7">11/18/2023 12:48:09 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1F68F83D-EAEC-4814-BD8E-381C58A65E3C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LSET">
      <DTS:VariableValue
        DTS:DataType="7">11/18/2023 12:48:16 PM</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\BRAND_STAGE to BRAND_NDS"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{f50989c5-3232-4819-8136-270923cbf6f9}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="BRAND_STAGE to BRAND_NDS"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add SourceID"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                      name="SourceID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="BRAND _STAGE"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[BRAND_STAGE]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        BrandID, BrandName, CreateDay, UpdateDay
FROM            dbo.BRAND_STAGE</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"Parameter0:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter1:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[BrandID]"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandID]"
                      name="BrandID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[BrandName]"
                      length="500"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandName]"
                      name="BrandName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                      name="CreateDay"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                      name="UpdateDay"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[BrandID]"
                      dataType="i4"
                      name="BrandID" />
                    <externalMetadataColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[BrandName]"
                      dataType="wstr"
                      length="500"
                      name="BrandName" />
                    <externalMetadataColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                      dataType="dbTimeStamp"
                      name="CreateDay" />
                    <externalMetadataColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                      dataType="dbTimeStamp"
                      name="UpdateDay" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[BrandID]"
                      dataType="i4"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[BrandID]"
                      name="BrandID" />
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[BrandName]"
                      dataType="wstr"
                      length="500"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[BrandName]"
                      name="BrandName" />
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                      dataType="dbTimeStamp"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                      name="CreateDay" />
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                      dataType="dbTimeStamp"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                      name="UpdateDay" />
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check exists in BRAND_NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        BrandNK

FROM            dbo.BRAND_NDS

WHERE        (SourceID = 1)</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        BrandNK

FROM            dbo.BRAND_NDS

WHERE        (SourceID = 1)) [refTable]
where [refTable].[BrandNK] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="BrandNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Inputs[Lookup Input].Columns[BrandID]"
                      cachedDataType="i4"
                      cachedName="BrandID"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">BrandNK</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert data if not exists"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[BRAND_NDS]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[BrandID]"
                      cachedDataType="i4"
                      cachedName="BrandID"
                      externalMetadataColumnId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[BrandNK]"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandID]" />
                    <inputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[BrandName]"
                      cachedDataType="wstr"
                      cachedLength="500"
                      cachedName="BrandName"
                      externalMetadataColumnId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandName]" />
                    <inputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CreateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="CreateDay"
                      externalMetadataColumnId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                    <inputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[UpdateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="UpdateDay"
                      externalMetadataColumnId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                    <inputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[SourceID]"
                      cachedDataType="i4"
                      cachedName="SourceID"
                      externalMetadataColumnId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[BrandSK]"
                      dataType="i4"
                      name="BrandSK" />
                    <externalMetadataColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[BrandNK]"
                      dataType="i4"
                      name="BrandNK" />
                    <externalMetadataColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                      dataType="i4"
                      name="SourceID" />
                    <externalMetadataColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                      dataType="wstr"
                      length="500"
                      name="BrandName" />
                    <externalMetadataColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                      dataType="dbTimeStamp"
                      name="CreateDay" />
                    <externalMetadataColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                      dataType="dbTimeStamp"
                      name="UpdateDay" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update Data if exists"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update BRAND_NDS
Set BrandName = ?,
CreateDay = ?,
UpdateDay = ?
where BrandNK = ? and SourceID = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[BrandName]"
                      cachedDataType="wstr"
                      cachedLength="500"
                      cachedName="BrandName"
                      externalMetadataColumnId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandName]" />
                    <inputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CreateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="CreateDay"
                      externalMetadataColumnId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                    <inputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[UpdateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="UpdateDay"
                      externalMetadataColumnId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                    <inputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[BrandID]"
                      cachedDataType="i4"
                      cachedName="BrandID"
                      externalMetadataColumnId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandID]" />
                    <inputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[SourceID]"
                      cachedDataType="i4"
                      cachedName="SourceID"
                      externalMetadataColumnId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="wstr"
                      length="500"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="dbTimeStamp"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="dbTimeStamp"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="i4"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="i4"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\BRAND_STAGE to BRAND_NDS.Paths[Derived Column Output]"
              endId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Output]" />
            <path
              refId="Package\BRAND_STAGE to BRAND_NDS.Paths[Lookup Match Output]"
              endId="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
              name="Lookup Match Output"
              startId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\BRAND_STAGE to BRAND_NDS.Paths[Lookup No Match Output]"
              endId="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\BRAND_STAGE to BRAND_NDS.Paths[OLE DB Source Output]"
              endId="Package\BRAND_STAGE to BRAND_NDS\Add SourceID.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CATEGORY_STAGE to CATEGORY_NDS"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{f3fa9d7c-a40b-459b-b73a-7b8dfd655141}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="CATEGORY_STAGE to CATEGORY_NDS"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add SourceID"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                      name="SourceID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="CATEGORY _STAGE"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CATEGORY_STAGE]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT *
FROM CATEGORY_STAGE</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"Parameter0:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter1:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                      name="CreateDay"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                      name="UpdateDay"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CategoryID]"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]"
                      name="CategoryID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CategoryName]"
                      length="500"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryName]"
                      name="CategoryName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                      dataType="dbTimeStamp"
                      name="CreateDay" />
                    <externalMetadataColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                      dataType="dbTimeStamp"
                      name="UpdateDay" />
                    <externalMetadataColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CategoryID]"
                      dataType="i4"
                      name="CategoryID" />
                    <externalMetadataColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CategoryName]"
                      dataType="wstr"
                      length="500"
                      name="CategoryName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[CategoryID]"
                      dataType="i4"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[CategoryID]"
                      name="CategoryID" />
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[CategoryName]"
                      dataType="wstr"
                      length="500"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[CategoryName]"
                      name="CategoryName" />
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                      dataType="dbTimeStamp"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                      name="CreateDay" />
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                      dataType="dbTimeStamp"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                      name="UpdateDay" />
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check exists in CATEGORY_NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        CategoryNK
FROM            dbo.CATEGORY_NDS
WHERE        (SourceID = 1)</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        CategoryNK
FROM            dbo.CATEGORY_NDS
WHERE        (SourceID = 1)) [refTable]
where [refTable].[CategoryNK] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="CategoryNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Inputs[Lookup Input].Columns[CategoryID]"
                      cachedDataType="i4"
                      cachedName="CategoryID"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">CategoryNK</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert data if not exists"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CATEGORY_NDS]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CreateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="CreateDay"
                      externalMetadataColumnId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                    <inputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[UpdateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="UpdateDay"
                      externalMetadataColumnId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                    <inputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[SourceID]"
                      cachedDataType="i4"
                      cachedName="SourceID"
                      externalMetadataColumnId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                    <inputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CategoryID]"
                      cachedDataType="i4"
                      cachedName="CategoryID"
                      externalMetadataColumnId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CategoryNK]"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]" />
                    <inputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CategoryName]"
                      cachedDataType="wstr"
                      cachedLength="500"
                      cachedName="CategoryName"
                      externalMetadataColumnId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CategoryName]"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                      dataType="i4"
                      name="SourceID" />
                    <externalMetadataColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                      dataType="dbTimeStamp"
                      name="CreateDay" />
                    <externalMetadataColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                      dataType="dbTimeStamp"
                      name="UpdateDay" />
                    <externalMetadataColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CategorySK]"
                      dataType="i4"
                      name="CategorySK" />
                    <externalMetadataColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CategoryNK]"
                      dataType="i4"
                      name="CategoryNK" />
                    <externalMetadataColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CategoryName]"
                      dataType="wstr"
                      length="500"
                      name="CategoryName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update Data if exists"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update CATEGORY_NDS
Set CategoryName = ?,
CreateDay = ?,
UpdateDay = ?
where CategoryNK = ? and SourceID = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CategoryName]"
                      cachedDataType="wstr"
                      cachedLength="500"
                      cachedName="CategoryName"
                      externalMetadataColumnId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryName]" />
                    <inputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CreateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="CreateDay"
                      externalMetadataColumnId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                    <inputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[UpdateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="UpdateDay"
                      externalMetadataColumnId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                    <inputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CategoryID]"
                      cachedDataType="i4"
                      cachedName="CategoryID"
                      externalMetadataColumnId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]" />
                    <inputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[SourceID]"
                      cachedDataType="i4"
                      cachedName="SourceID"
                      externalMetadataColumnId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="wstr"
                      length="500"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="dbTimeStamp"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="dbTimeStamp"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="i4"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="i4"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\CATEGORY_STAGE to CATEGORY_NDS.Paths[Derived Column Output]"
              endId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Output]" />
            <path
              refId="Package\CATEGORY_STAGE to CATEGORY_NDS.Paths[Lookup Match Output]"
              endId="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
              name="Lookup Match Output"
              startId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\CATEGORY_STAGE to CATEGORY_NDS.Paths[Lookup No Match Output]"
              endId="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\CATEGORY_STAGE to CATEGORY_NDS.Paths[OLE DB Source Output]"
              endId="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{b769a47e-5f4b-4a3d-905e-a378a82992e7}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DIRECTORY_STAGE to DIRECTORY_NDS"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add SourceID"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                      name="SourceID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check exists in DIRECTORY_NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        DirectoryNK
FROM            dbo.DIRECTORY_NDS
WHERE        (SourceID = 1)</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        DirectoryNK
FROM            dbo.DIRECTORY_NDS
WHERE        (SourceID = 1)) [refTable]
where [refTable].[DirectoryNK] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DirectoryNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Inputs[Lookup Input].Columns[DirectoryID]"
                      cachedDataType="i4"
                      cachedName="DirectoryID"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">DirectoryNK</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="DIRECTORY_STAGE"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[DIRECTORY_STAGE]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        DirectoryID, DirectoryName, CreateDay, UpdateDay
FROM            dbo.DIRECTORY_STAGE</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"Parameter0:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter1:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                      name="CreateDay"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                      name="UpdateDay"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DirectoryID]"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryID]"
                      name="DirectoryID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DirectoryName]"
                      length="500"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryName]"
                      name="DirectoryName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                      dataType="dbTimeStamp"
                      name="CreateDay" />
                    <externalMetadataColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                      dataType="dbTimeStamp"
                      name="UpdateDay" />
                    <externalMetadataColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DirectoryID]"
                      dataType="i4"
                      name="DirectoryID" />
                    <externalMetadataColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DirectoryName]"
                      dataType="wstr"
                      length="500"
                      name="DirectoryName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[DirectoryID]"
                      dataType="i4"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[DirectoryID]"
                      name="DirectoryID" />
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[DirectoryName]"
                      dataType="wstr"
                      length="500"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[DirectoryName]"
                      name="DirectoryName" />
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                      dataType="dbTimeStamp"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                      name="CreateDay" />
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                      dataType="dbTimeStamp"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                      name="UpdateDay" />
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert data if not exists"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[DIRECTORY_NDS]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CreateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="CreateDay"
                      externalMetadataColumnId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                    <inputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[UpdateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="UpdateDay"
                      externalMetadataColumnId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                    <inputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[DirectoryID]"
                      cachedDataType="i4"
                      cachedName="DirectoryID"
                      externalMetadataColumnId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DirectoryNK]"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryID]" />
                    <inputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[SourceID]"
                      cachedDataType="i4"
                      cachedName="SourceID"
                      externalMetadataColumnId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                    <inputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[DirectoryName]"
                      cachedDataType="wstr"
                      cachedLength="500"
                      cachedName="DirectoryName"
                      externalMetadataColumnId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DirectoryName]"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                      dataType="i4"
                      name="SourceID" />
                    <externalMetadataColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                      dataType="dbTimeStamp"
                      name="CreateDay" />
                    <externalMetadataColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                      dataType="dbTimeStamp"
                      name="UpdateDay" />
                    <externalMetadataColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DirectorySK]"
                      dataType="i4"
                      name="DirectorySK" />
                    <externalMetadataColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DirectoryNK]"
                      dataType="i4"
                      name="DirectoryNK" />
                    <externalMetadataColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DirectoryName]"
                      dataType="wstr"
                      length="500"
                      name="DirectoryName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update Data if exists"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update DIRECTORY_NDS
Set DirectoryName = ?,
CreateDay = ?,
UpdateDay = ?
where DirectoryNK = ? and SourceID = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[DirectoryName]"
                      cachedDataType="wstr"
                      cachedLength="500"
                      cachedName="DirectoryName"
                      externalMetadataColumnId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryName]" />
                    <inputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CreateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="CreateDay"
                      externalMetadataColumnId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                    <inputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[UpdateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="UpdateDay"
                      externalMetadataColumnId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                    <inputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[DirectoryID]"
                      cachedDataType="i4"
                      cachedName="DirectoryID"
                      externalMetadataColumnId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryID]" />
                    <inputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[SourceID]"
                      cachedDataType="i4"
                      cachedName="SourceID"
                      externalMetadataColumnId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="wstr"
                      length="500"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="dbTimeStamp"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="dbTimeStamp"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="i4"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="i4"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[Derived Column Output]"
              endId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Output]" />
            <path
              refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[Lookup Match Output]"
              endId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
              name="Lookup Match Output"
              startId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[Lookup No Match Output]"
              endId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[OLE DB Source Output]"
              endId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\PRODUCT_STAGE to PRODUCT_NDS"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{0493E4B3-64F1-4F12-80CB-0CFF042F7580}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="PRODUCT_STAGE to PRODUCT_NDS"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add SourceID"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                      name="SourceID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check exists in BRAND_NDS in NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        BrandSK, BrandNK
FROM          dbo.BRAND_NDS
WHERE SourceID =1</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        BrandSK, BrandNK
FROM          dbo.BRAND_NDS
WHERE SourceID =1) [refTable]
where [refTable].[BrandNK] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="BrandSK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="BrandNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\PRODUCT_STAGE to PRODUCT_NDS\996:invalid};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Inputs[Lookup Input].Columns[BrandID]"
                      cachedDataType="i4"
                      cachedName="BrandID"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[BrandID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">BrandNK</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Match Output].Columns[BrandSK]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Match Output].Columns[BrandSK]"
                      name="BrandSK"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">BrandSK</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check exists in CATEGORY_NDS in NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        CategorySK, CategoryNK
FROM            dbo.CATEGORY_NDS
WHERE SourceID = 1</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        CategorySK, CategoryNK
FROM            dbo.CATEGORY_NDS
WHERE SourceID = 1) [refTable]
where [refTable].[CategoryNK] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="CategorySK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CategoryNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\PRODUCT_STAGE to PRODUCT_NDS\997:invalid};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Inputs[Lookup Input].Columns[CategoryID]"
                      cachedDataType="i4"
                      cachedName="CategoryID"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">CategoryNK</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Match Output].Columns[CategorySK]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Match Output].Columns[CategorySK]"
                      name="CategorySK"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">CategorySK</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check exists in DIRECTORY_NDS in NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        DirectorySK, DirectoryNK
FROM            dbo.DIRECTORY_NDS
WHERE        (SourceID = 1)</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        DirectorySK, DirectoryNK
FROM            dbo.DIRECTORY_NDS
WHERE        (SourceID = 1)) [refTable]
where [refTable].[DirectoryNK] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DirectorySK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DirectoryNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\PRODUCT_STAGE to PRODUCT_NDS\998:invalid};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Inputs[Lookup Input].Columns[DanhmucID]"
                      cachedDataType="i4"
                      cachedName="DanhmucID"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[DanhmucID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">DirectoryNK</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Match Output].Columns[DirectorySK]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Match Output].Columns[DirectorySK]"
                      name="DirectorySK"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">DirectorySK</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check exists in DIRECTORY_NDS in NDS 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        StoreSK, StoreNK
FROM            dbo.STORE_NDS
WHERE        (SourceID = 1)</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        StoreSK, StoreNK
FROM            dbo.STORE_NDS
WHERE        (SourceID = 1)) [refTable]
where [refTable].[StoreNK] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="StoreSK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StoreNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Inputs[Lookup Input].Columns[StoreID]"
                      cachedDataType="i4"
                      cachedName="StoreID"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">StoreNK</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Match Output].Columns[StoreSK]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Match Output].Columns[StoreSK]"
                      name="StoreSK"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">StoreSK</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check exists in PRODUCT_NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        ProductNK

FROM            dbo.PRODUCT_NDS

WHERE        (SourceID = 1)</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        ProductNK

FROM            dbo.PRODUCT_NDS

WHERE        (SourceID = 1)) [refTable]
where [refTable].[ProductNK] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ProductNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\PRODUCT_STAGE to PRODUCT_NDS\999:invalid};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Inputs[Lookup Input].Columns[ProductID]"
                      cachedDataType="i4"
                      cachedName="ProductID"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ProductNK</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert data if not exists"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PRODUCT_NDS]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CreateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="CreateDay"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[UpdateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="UpdateDay"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[ProductID]"
                      cachedDataType="i4"
                      cachedName="ProductID"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ProductNK]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductID]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[ProductName]"
                      cachedDataType="wstr"
                      cachedLength="500"
                      cachedName="ProductName"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ProductName]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductName]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[ShortDescription]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="ShortDescription"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ShortDescription]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ShortDescription]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[Price]"
                      cachedDataType="i4"
                      cachedName="Price"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[Price]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Price]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[SourceID]"
                      cachedDataType="i4"
                      cachedName="SourceID"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[ReviewCount]"
                      cachedDataType="i4"
                      cachedName="ReviewCount"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ReviewCount]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ReviewCount]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[Rating]"
                      cachedDataType="r8"
                      cachedName="Rating"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[Rating]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Rating]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[QuantitySold]"
                      cachedDataType="i4"
                      cachedName="QuantitySold"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[QuantitySold]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[QuantitySold]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[DiscountRate]"
                      cachedDataType="i4"
                      cachedName="DiscountRate"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DiscountRate]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[DiscountRate]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[OriginalPrice]"
                      cachedDataType="i4"
                      cachedName="OriginalPrice"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[OriginalPrice]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[OriginalPrice]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[Discount]"
                      cachedDataType="i4"
                      cachedName="Discount"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[Discount]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Discount]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[BrandSK]"
                      cachedDataType="i4"
                      cachedName="BrandSK"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[BrandID]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Match Output].Columns[BrandSK]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CategorySK]"
                      cachedDataType="i4"
                      cachedName="CategorySK"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CategoryID]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Match Output].Columns[CategorySK]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[StoreSK]"
                      cachedDataType="i4"
                      cachedName="StoreSK"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreID]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Match Output].Columns[StoreSK]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[DirectorySK]"
                      cachedDataType="i4"
                      cachedName="DirectorySK"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DanhmucID]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Match Output].Columns[DirectorySK]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                      dataType="i4"
                      name="SourceID" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                      dataType="dbTimeStamp"
                      name="CreateDay" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                      dataType="dbTimeStamp"
                      name="UpdateDay" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ProductSK]"
                      dataType="i4"
                      name="ProductSK" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ProductNK]"
                      dataType="i4"
                      name="ProductNK" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[BrandID]"
                      dataType="i4"
                      name="BrandID" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CategoryID]"
                      dataType="i4"
                      name="CategoryID" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreID]"
                      dataType="i4"
                      name="StoreID" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DanhmucID]"
                      dataType="i4"
                      name="DanhmucID" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ProductName]"
                      dataType="wstr"
                      length="500"
                      name="ProductName" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ShortDescription]"
                      dataType="wstr"
                      length="4000"
                      name="ShortDescription" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[Price]"
                      dataType="i4"
                      name="Price" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[OriginalPrice]"
                      dataType="i4"
                      name="OriginalPrice" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[Discount]"
                      dataType="i4"
                      name="Discount" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DiscountRate]"
                      dataType="i4"
                      name="DiscountRate" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[QuantitySold]"
                      dataType="i4"
                      name="QuantitySold" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[Rating]"
                      dataType="r8"
                      name="Rating" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ReviewCount]"
                      dataType="i4"
                      name="ReviewCount" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="PRODUCT_STAGE"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PRODUCT_STAGE]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT *
FROM STORE_STAGE
WHERE (CreateDay &gt;= ? and CreateDay &lt; ?) or (UpdateDay &gt;= ? and UpdateDay &lt; ?)</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"Parameter0:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter1:Input",{B6CE0354-14D7-493A-8463-5262D1B3767C};"Parameter2:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter3:Input",{B6CE0354-14D7-493A-8463-5262D1B3767C};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                      name="CreateDay"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                      name="UpdateDay"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreID]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]"
                      name="StoreID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ProductID]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductID]"
                      name="ProductID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[BrandID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[BrandID]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[BrandID]"
                      name="BrandID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CategoryID]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]"
                      name="CategoryID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[DanhmucID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DanhmucID]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[DanhmucID]"
                      name="DanhmucID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ProductName]"
                      length="500"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductName]"
                      name="ProductName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ShortDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ShortDescription]"
                      length="4000"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ShortDescription]"
                      name="ShortDescription"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Price]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[Price]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Price]"
                      name="Price"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[OriginalPrice]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[OriginalPrice]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[OriginalPrice]"
                      name="OriginalPrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Discount]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[Discount]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Discount]"
                      name="Discount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[DiscountRate]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DiscountRate]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[DiscountRate]"
                      name="DiscountRate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[QuantitySold]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[QuantitySold]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[QuantitySold]"
                      name="QuantitySold"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Rating]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[Rating]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Rating]"
                      name="Rating"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ReviewCount]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ReviewCount]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ReviewCount]"
                      name="ReviewCount"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                      dataType="dbTimeStamp"
                      name="CreateDay" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                      dataType="dbTimeStamp"
                      name="UpdateDay" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreID]"
                      dataType="i4"
                      name="StoreID" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ProductID]"
                      dataType="i4"
                      name="ProductID" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[BrandID]"
                      dataType="i4"
                      name="BrandID" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CategoryID]"
                      dataType="i4"
                      name="CategoryID" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DanhmucID]"
                      dataType="i4"
                      name="DanhmucID" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ProductName]"
                      dataType="wstr"
                      length="500"
                      name="ProductName" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ShortDescription]"
                      dataType="wstr"
                      length="4000"
                      name="ShortDescription" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[Price]"
                      dataType="i4"
                      name="Price" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[OriginalPrice]"
                      dataType="i4"
                      name="OriginalPrice" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[Discount]"
                      dataType="i4"
                      name="Discount" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DiscountRate]"
                      dataType="i4"
                      name="DiscountRate" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[QuantitySold]"
                      dataType="i4"
                      name="QuantitySold" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[Rating]"
                      dataType="r8"
                      name="Rating" />
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ReviewCount]"
                      dataType="i4"
                      name="ReviewCount" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ProductID]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ProductID]"
                      name="ProductID" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[BrandID]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[BrandID]"
                      name="BrandID" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[CategoryID]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[CategoryID]"
                      name="CategoryID" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreID]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreID]"
                      name="StoreID" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[DanhmucID]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[DanhmucID]"
                      name="DanhmucID" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ProductName]"
                      dataType="wstr"
                      length="500"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ProductName]"
                      name="ProductName" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ShortDescription]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ShortDescription]"
                      name="ShortDescription" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[Price]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[Price]"
                      name="Price" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[OriginalPrice]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[OriginalPrice]"
                      name="OriginalPrice" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[Discount]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[Discount]"
                      name="Discount" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[DiscountRate]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[DiscountRate]"
                      name="DiscountRate" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[QuantitySold]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[QuantitySold]"
                      name="QuantitySold" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[Rating]"
                      dataType="r8"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[Rating]"
                      name="Rating" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ReviewCount]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ReviewCount]"
                      name="ReviewCount" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                      dataType="dbTimeStamp"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                      name="CreateDay" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                      dataType="dbTimeStamp"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                      name="UpdateDay" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update Data if exists"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE PRODUCT_NDS
SET BrandID = ?,
CategoryID = ?,
StoreID = ?,
DanhmucID = ?,
ProductName = ?,
ShortDescription = ?,
Price =?,
OriginalPrice = ?,
Discount = ?,
DiscountRate = ?,
QuantitySold = ?,
Rating = ?,
ReviewCount = ?,
CreateDay = ?,
UpdateDay = ?
WHERE ProductNK = ? and SourceID = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[ProductName]"
                      cachedDataType="wstr"
                      cachedLength="500"
                      cachedName="ProductName"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductName]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[ShortDescription]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="ShortDescription"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ShortDescription]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[Price]"
                      cachedDataType="i4"
                      cachedName="Price"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Price]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[OriginalPrice]"
                      cachedDataType="i4"
                      cachedName="OriginalPrice"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[OriginalPrice]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[Discount]"
                      cachedDataType="i4"
                      cachedName="Discount"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Discount]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[DiscountRate]"
                      cachedDataType="i4"
                      cachedName="DiscountRate"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[DiscountRate]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[QuantitySold]"
                      cachedDataType="i4"
                      cachedName="QuantitySold"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[QuantitySold]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[Rating]"
                      cachedDataType="r8"
                      cachedName="Rating"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Rating]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[ReviewCount]"
                      cachedDataType="i4"
                      cachedName="ReviewCount"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ReviewCount]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CreateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="CreateDay"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[UpdateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="UpdateDay"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[ProductID]"
                      cachedDataType="i4"
                      cachedName="ProductID"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductID]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[SourceID]"
                      cachedDataType="i4"
                      cachedName="SourceID"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[BrandSK]"
                      cachedDataType="i4"
                      cachedName="BrandSK"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Match Output].Columns[BrandSK]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CategorySK]"
                      cachedDataType="i4"
                      cachedName="CategorySK"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Match Output].Columns[CategorySK]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[StoreSK]"
                      cachedDataType="i4"
                      cachedName="StoreSK"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Match Output].Columns[StoreSK]" />
                    <inputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[DirectorySK]"
                      cachedDataType="i4"
                      cachedName="DirectorySK"
                      externalMetadataColumnId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Match Output].Columns[DirectorySK]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="i4"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="i4"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="i4"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="i4"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="wstr"
                      length="500"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="wstr"
                      length="4000"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      dataType="i4"
                      name="Param_6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      dataType="i4"
                      name="Param_7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      dataType="i4"
                      name="Param_8">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      dataType="i4"
                      name="Param_9">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                      dataType="i4"
                      name="Param_10">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                      dataType="r8"
                      name="Param_11">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                      dataType="i4"
                      name="Param_12">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                      dataType="dbTimeStamp"
                      name="Param_13">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                      dataType="dbTimeStamp"
                      name="Param_14">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                      dataType="i4"
                      name="Param_15">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                      dataType="i4"
                      name="Param_16">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[Derived Column Output]"
              endId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Output]" />
            <path
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output]"
              endId="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
              name="Lookup Match Output"
              startId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output1]"
              endId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output2]"
              endId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output3]"
              endId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output4]"
              endId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Match Output]" />
            <path
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup No Match Output]"
              endId="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[OLE DB Source Output]"
              endId="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\STORE_STAGE to STORE_NDS"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{81d66bdd-93ad-476a-82db-90ac58aa51bf}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="STORE_STAGE to STORE_NDS"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\STORE_STAGE to STORE_NDS\Add SourceID"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add SourceID"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\STORE_STAGE to STORE_NDS\Add SourceID.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\STORE_STAGE to STORE_NDS\Add SourceID.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                      name="SourceID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\STORE_STAGE to STORE_NDS\Add SourceID.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check exists in STORE_NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        StoreNK

FROM            dbo.STORE_NDS

WHERE        (SourceID = 1)</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        StoreNK

FROM            dbo.STORE_NDS

WHERE        (SourceID = 1)) [refTable]
where [refTable].[StoreNK] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="StoreNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Inputs[Lookup Input].Columns[StoreID]"
                      cachedDataType="i4"
                      cachedName="StoreID"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">StoreNK</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert data if not exists"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[STORE_NDS]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[SourceID]"
                      cachedDataType="i4"
                      cachedName="SourceID"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CreateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="CreateDay"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[UpdateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="UpdateDay"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[StoreID]"
                      cachedDataType="i4"
                      cachedName="StoreID"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreNK]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[StoreName]"
                      cachedDataType="wstr"
                      cachedLength="500"
                      cachedName="StoreName"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreName]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreName]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[StoreOfficial]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="StoreOfficial"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreOfficial]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreOfficial]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[StoreAVGRating]"
                      cachedDataType="r8"
                      cachedName="StoreAVGRating"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreAVGRating]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreAVGRating]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[StoreReviewCount]"
                      cachedDataType="i4"
                      cachedName="StoreReviewCount"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreReviewCount]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreReviewCount]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[StoreTotalFollower]"
                      cachedDataType="i4"
                      cachedName="StoreTotalFollower"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreTotalFollower]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreTotalFollower]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                      dataType="i4"
                      name="SourceID" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                      dataType="dbTimeStamp"
                      name="CreateDay" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                      dataType="dbTimeStamp"
                      name="UpdateDay" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreSK]"
                      dataType="i4"
                      name="StoreSK" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreNK]"
                      dataType="i4"
                      name="StoreNK" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreName]"
                      dataType="wstr"
                      length="500"
                      name="StoreName" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreOfficial]"
                      dataType="wstr"
                      length="100"
                      name="StoreOfficial" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreAVGRating]"
                      dataType="r8"
                      name="StoreAVGRating" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreReviewCount]"
                      dataType="i4"
                      name="StoreReviewCount" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreTotalFollower]"
                      dataType="i4"
                      name="StoreTotalFollower" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="STORE_STAGE"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[STORE_STAGE]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        StoreID, StoreName, StoreOfficial, StoreAVGRating, StoreReviewCount, StoreTotalFollower, CreateDay, UpdateDay
FROM            dbo.STORE_STAGE</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"Parameter0:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter1:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                      name="CreateDay"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                      name="UpdateDay"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreID]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]"
                      name="StoreID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreName]"
                      length="500"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreName]"
                      name="StoreName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreOfficial]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreOfficial]"
                      length="100"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreOfficial]"
                      name="StoreOfficial"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreAVGRating]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreAVGRating]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreAVGRating]"
                      name="StoreAVGRating"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreReviewCount]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreReviewCount]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreReviewCount]"
                      name="StoreReviewCount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreTotalFollower]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreTotalFollower]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreTotalFollower]"
                      name="StoreTotalFollower"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                      dataType="dbTimeStamp"
                      name="CreateDay" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                      dataType="dbTimeStamp"
                      name="UpdateDay" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreID]"
                      dataType="i4"
                      name="StoreID" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreName]"
                      dataType="wstr"
                      length="500"
                      name="StoreName" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreOfficial]"
                      dataType="wstr"
                      length="100"
                      name="StoreOfficial" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreAVGRating]"
                      dataType="r8"
                      name="StoreAVGRating" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreReviewCount]"
                      dataType="i4"
                      name="StoreReviewCount" />
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreTotalFollower]"
                      dataType="i4"
                      name="StoreTotalFollower" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreID]"
                      dataType="i4"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreID]"
                      name="StoreID" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreName]"
                      dataType="wstr"
                      length="500"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreName]"
                      name="StoreName" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreOfficial]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreOfficial]"
                      name="StoreOfficial" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreAVGRating]"
                      dataType="r8"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreAVGRating]"
                      name="StoreAVGRating" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreReviewCount]"
                      dataType="i4"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreReviewCount]"
                      name="StoreReviewCount" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreTotalFollower]"
                      dataType="i4"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreTotalFollower]"
                      name="StoreTotalFollower" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                      dataType="dbTimeStamp"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                      name="CreateDay" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                      dataType="dbTimeStamp"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                      name="UpdateDay" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update Data if exists"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update STORE_NDS
Set StoreName = ?,
StoreOfficial = ?,
StoreAVGRating = ?,
StoreReviewCount = ?,
StoreTotalFollower = ?,
CreateDay = ?,
UpdateDay = ?
where StoreNK = ? and SourceID = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[StoreName]"
                      cachedDataType="wstr"
                      cachedLength="500"
                      cachedName="StoreName"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreName]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[StoreOfficial]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="StoreOfficial"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreOfficial]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[StoreAVGRating]"
                      cachedDataType="r8"
                      cachedName="StoreAVGRating"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreAVGRating]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[StoreReviewCount]"
                      cachedDataType="i4"
                      cachedName="StoreReviewCount"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreReviewCount]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[StoreTotalFollower]"
                      cachedDataType="i4"
                      cachedName="StoreTotalFollower"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreTotalFollower]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CreateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="CreateDay"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[UpdateDay]"
                      cachedDataType="dbTimeStamp"
                      cachedName="UpdateDay"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[StoreID]"
                      cachedDataType="i4"
                      cachedName="StoreID"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]" />
                    <inputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[SourceID]"
                      cachedDataType="i4"
                      cachedName="SourceID"
                      externalMetadataColumnId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      lineageId="Package\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="wstr"
                      length="500"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="wstr"
                      length="100"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="r8"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="i4"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="i4"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="dbTimeStamp"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      dataType="dbTimeStamp"
                      name="Param_6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      dataType="i4"
                      name="Param_7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      dataType="i4"
                      name="Param_8">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\STORE_STAGE to STORE_NDS.Paths[Derived Column Output]"
              endId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Output]" />
            <path
              refId="Package\STORE_STAGE to STORE_NDS.Paths[Lookup Match Output]"
              endId="Package\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
              name="Lookup Match Output"
              startId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\STORE_STAGE to STORE_NDS.Paths[Lookup No Match Output]"
              endId="Package\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\STORE_STAGE to STORE_NDS.Paths[OLE DB Source Output]"
              endId="Package\STORE_STAGE to STORE_NDS\Add SourceID.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{B410A567-E69C-4CE5-83AE-ECA77AF74D06}"
      DTS:From="Package\BRAND_STAGE to BRAND_NDS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\CATEGORY_STAGE to CATEGORY_NDS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{B027E273-D585-45E6-8657-702899662B14}"
      DTS:From="Package\CATEGORY_STAGE to CATEGORY_NDS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\DIRECTORY_STAGE to DIRECTORY_NDS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{8EF3F938-8271-4A0C-B908-C4649058BB5C}"
      DTS:From="Package\DIRECTORY_STAGE to DIRECTORY_NDS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\STORE_STAGE to STORE_NDS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{BAA3E861-F84A-4C68-AB45-4F8D4B7C8B5C}"
      DTS:From="Package\STORE_STAGE to STORE_NDS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\PRODUCT_STAGE to PRODUCT_NDS" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="275,42"
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS"
          TopLeft="481.183261183261,302.731601731602" />
        <NodeLayout
          Size="244,42"
          Id="Package\BRAND_STAGE to BRAND_NDS"
          TopLeft="120.103896103896,184.493506493507" />
        <NodeLayout
          Size="290,42"
          Id="Package\CATEGORY_STAGE to CATEGORY_NDS"
          TopLeft="484.532467532468,189.207792207792" />
        <NodeLayout
          Size="296,42"
          Id="Package\DIRECTORY_STAGE to DIRECTORY_NDS"
          TopLeft="858.818181818182,189.064935064935" />
        <NodeLayout
          Size="242,42"
          Id="Package\STORE_STAGE to STORE_NDS"
          TopLeft="881.468975468976,298.430014430014" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="364.103896103896,207.850649350649">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="120.428571428572,0"
              Start="0,0"
              End="112.928571428572,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="112.928571428572,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="774.532467532468,210.136363636363">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="84.2857142857144,0"
              Start="0,0"
              End="76.7857142857144,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="76.7857142857144,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="1004.64357864358,231.064935064935">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,67.3650793650797"
              Start="0,0"
              End="0,59.8650793650797">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.8650793650797" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="881.468975468976,321.580808080808">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-125.285714285715,0"
              Start="0,0"
              End="-117.785714285715,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-117.785714285715,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\BRAND_STAGE to BRAND_NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="164,42"
          Id="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE"
          TopLeft="536,103" />
        <NodeLayout
          Size="189,42"
          Id="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists"
          TopLeft="723,408" />
        <NodeLayout
          Size="180,42"
          Id="Package\BRAND_STAGE to BRAND_NDS\Update Data if exists"
          TopLeft="369,413" />
        <NodeLayout
          Size="147,42"
          Id="Package\BRAND_STAGE to BRAND_NDS\Add SourceID"
          TopLeft="550,181" />
        <NodeLayout
          Size="224,42"
          Id="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS"
          TopLeft="507,256" />
        <EdgeLayout
          Id="Package\BRAND_STAGE to BRAND_NDS.Paths[OLE DB Source Output]"
          TopLeft="620.75,145">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\BRAND_STAGE to BRAND_NDS.Paths[Lookup No Match Output]"
          TopLeft="655,298">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="162.5,110"
              Start="0,0"
              End="162.5,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.468085106383" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.468085106383"
                    Point2="0,44.468085106383"
                    Point3="4,44.468085106383" />
                  <mssgle:LineSegment
                    End="158.5,44.468085106383" />
                  <mssgle:CubicBezierSegment
                    Point1="158.5,44.468085106383"
                    Point2="162.5,44.468085106383"
                    Point3="162.5,48.468085106383" />
                  <mssgle:LineSegment
                    End="162.5,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="25.44361328125,49.468085106383,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\BRAND_STAGE to BRAND_NDS.Paths[Lookup Match Output]"
          TopLeft="583,298">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-124,115"
              Start="0,0"
              End="-124,107.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.4893617021277" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.4893617021277"
                    Point2="0,46.4893617021277"
                    Point3="-4,46.4893617021277" />
                  <mssgle:LineSegment
                    End="-120,46.4893617021277" />
                  <mssgle:CubicBezierSegment
                    Point1="-120,46.4893617021277"
                    Point2="-124,46.4893617021277"
                    Point3="-124,50.4893617021277" />
                  <mssgle:LineSegment
                    End="-124,107.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-110.19138671875,51.4893617021277,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\BRAND_STAGE to BRAND_NDS.Paths[Derived Column Output]"
          TopLeft="621.25,223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\BRAND_STAGE to BRAND_NDS\Insert data if not exists">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\BRAND_STAGE to BRAND_NDS\BRAND _STAGE">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\CATEGORY_STAGE to CATEGORY_NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="187,42"
          Id="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE"
          TopLeft="227,60" />
        <NodeLayout
          Size="189,42"
          Id="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists"
          TopLeft="414,365" />
        <NodeLayout
          Size="180,42"
          Id="Package\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists"
          TopLeft="60,370" />
        <NodeLayout
          Size="147,42"
          Id="Package\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID"
          TopLeft="241,138" />
        <NodeLayout
          Size="247,42"
          Id="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS"
          TopLeft="198,213" />
        <EdgeLayout
          Id="Package\CATEGORY_STAGE to CATEGORY_NDS.Paths[OLE DB Source Output]"
          TopLeft="317.5,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CATEGORY_STAGE to CATEGORY_NDS.Paths[Lookup No Match Output]"
          TopLeft="361.333333333333,255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="147.166666666667,110"
              Start="0,0"
              End="147.166666666667,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.424778761062" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.424778761062"
                    Point2="0,44.424778761062"
                    Point3="4,44.424778761062" />
                  <mssgle:LineSegment
                    End="143.166666666667,44.424778761062" />
                  <mssgle:CubicBezierSegment
                    Point1="143.166666666667,44.424778761062"
                    Point2="147.166666666667,44.424778761062"
                    Point3="147.166666666667,48.424778761062" />
                  <mssgle:LineSegment
                    End="147.166666666667,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="17.7769466145833,49.424778761062,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CATEGORY_STAGE to CATEGORY_NDS.Paths[Lookup Match Output]"
          TopLeft="281.666666666667,255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-131.666666666667,115"
              Start="0,0"
              End="-131.666666666667,107.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.4440868865648" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.4440868865648"
                    Point2="0,46.4440868865648"
                    Point3="-4,46.4440868865648" />
                  <mssgle:LineSegment
                    End="-127.666666666667,46.4440868865648" />
                  <mssgle:CubicBezierSegment
                    Point1="-127.666666666667,46.4440868865648"
                    Point2="-131.666666666667,46.4440868865648"
                    Point3="-131.666666666667,50.4440868865648" />
                  <mssgle:LineSegment
                    End="-131.666666666667,107.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-114.024720052083,51.4440868865648,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CATEGORY_STAGE to CATEGORY_NDS.Paths[Derived Column Output]"
          TopLeft="318,180">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\DIRECTORY_STAGE to DIRECTORY_NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="250,42"
          Id="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS"
          TopLeft="198,213" />
        <NodeLayout
          Size="189,42"
          Id="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists"
          TopLeft="414,365" />
        <NodeLayout
          Size="180,42"
          Id="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists"
          TopLeft="60,370" />
        <NodeLayout
          Size="147,42"
          Id="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID"
          TopLeft="241,138" />
        <NodeLayout
          Size="187,42"
          Id="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE"
          TopLeft="227,60" />
        <EdgeLayout
          Id="Package\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[OLE DB Source Output]"
          TopLeft="317.5,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[Lookup No Match Output]"
          TopLeft="363.333333333333,255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="145.166666666667,110"
              Start="0,0"
              End="145.166666666667,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.4197138314785" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.4197138314785"
                    Point2="0,44.4197138314785"
                    Point3="4,44.4197138314785" />
                  <mssgle:LineSegment
                    End="141.166666666667,44.4197138314785" />
                  <mssgle:CubicBezierSegment
                    Point1="141.166666666667,44.4197138314785"
                    Point2="145.166666666667,44.4197138314785"
                    Point3="145.166666666667,48.4197138314785" />
                  <mssgle:LineSegment
                    End="145.166666666667,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="16.7769466145833,49.4197138314785,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[Lookup Match Output]"
          TopLeft="282.666666666667,255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-132.666666666667,115"
              Start="0,0"
              End="-132.666666666667,107.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.4387917329094" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.4387917329094"
                    Point2="0,46.4387917329094"
                    Point3="-4,46.4387917329094" />
                  <mssgle:LineSegment
                    End="-128.666666666667,46.4387917329094" />
                  <mssgle:CubicBezierSegment
                    Point1="-128.666666666667,46.4387917329094"
                    Point2="-132.666666666667,46.4387917329094"
                    Point3="-132.666666666667,50.4387917329094" />
                  <mssgle:LineSegment
                    End="-132.666666666667,107.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-114.524720052083,51.4387917329094,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[Derived Column Output]"
          TopLeft="314.5,180">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.5,33"
              Start="0,0"
              End="8.5,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.5"
                    Point2="0,16.5"
                    Point3="4,16.5" />
                  <mssgle:LineSegment
                    End="4.5,16.5" />
                  <mssgle:CubicBezierSegment
                    Point1="4.5,16.5"
                    Point2="8.5,16.5"
                    Point3="8.5,20.5" />
                  <mssgle:LineSegment
                    End="8.5,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\PRODUCT_STAGE to PRODUCT_NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="177,42"
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE"
          TopLeft="227,60" />
        <NodeLayout
          Size="189,42"
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists"
          TopLeft="623.5,334.178571428571" />
        <NodeLayout
          Size="147,42"
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID"
          TopLeft="566.12987012987,62.9512987012987" />
        <NodeLayout
          Size="261,42"
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS"
          TopLeft="816.25,68.75" />
        <NodeLayout
          Size="288,42"
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS"
          TopLeft="1208.75,202.5" />
        <NodeLayout
          Size="239,42"
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS"
          TopLeft="448.21428571429,197.198051948052" />
        <NodeLayout
          Size="180,42"
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists"
          TopLeft="330.92857142857,334.892857142857" />
        <NodeLayout
          Size="284,42"
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS"
          TopLeft="1216.25,66.25" />
        <NodeLayout
          Size="297,42"
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1"
          TopLeft="790,197.5" />
        <EdgeLayout
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[OLE DB Source Output]"
          TopLeft="404,82.4756493506493">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="162.12987012987,0"
              Start="0,0"
              End="154.62987012987,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="154.62987012987,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup No Match Output]"
          TopLeft="606.21428571429,239.198051948052">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="111.78571428571,94.980519480519"
              Start="0,0"
              End="111.78571428571,87.480519480519">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.3711824335264" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.3711824335264"
                    Point2="0,38.3711824335264"
                    Point3="4,38.3711824335264" />
                  <mssgle:LineSegment
                    End="107.78571428571,38.3711824335264" />
                  <mssgle:CubicBezierSegment
                    Point1="107.78571428571,38.3711824335264"
                    Point2="111.78571428571,38.3711824335264"
                    Point3="111.78571428571,42.3711824335264" />
                  <mssgle:LineSegment
                    End="111.78571428571,87.480519480519" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0.0864704241050021,43.3711824335264,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output4]"
          TopLeft="790,218.349025974026">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-102.78571428571,0"
              Start="0,0"
              End="-95.2857142857099,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-95.2857142857099,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-95.834243861605,5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output3]"
          TopLeft="1208.75,221">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-121.75,0"
              Start="0,0"
              End="-114.25,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-114.25,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-105.31638671875,5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output2]"
          TopLeft="1355.5,108.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,94.25"
              Start="0,0"
              End="0,86.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,86.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,37.5703125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output1]"
          TopLeft="1077.25,88.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="139,0"
              Start="0,0"
              End="131.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="131.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="17.55861328125,5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output]"
          TopLeft="529.21428571429,239.198051948052">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-108.28571428572,95.694805194805"
              Start="0,0"
              End="-108.28571428572,88.194805194805">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.6597467370534" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.6597467370534"
                    Point2="0,38.6597467370534"
                    Point3="-4,38.6597467370534" />
                  <mssgle:LineSegment
                    End="-104.28571428572,38.6597467370534" />
                  <mssgle:CubicBezierSegment
                    Point1="-104.28571428572,38.6597467370534"
                    Point2="-108.28571428572,38.6597467370534"
                    Point3="-108.28571428572,42.6597467370534" />
                  <mssgle:LineSegment
                    End="-108.28571428572,88.194805194805" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-102.33424386161,43.6597467370534,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PRODUCT_STAGE to PRODUCT_NDS.Paths[Derived Column Output]"
          TopLeft="713.12987012987,86.8506493506493">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="103.12012987013,0"
              Start="0,0"
              End="95.62012987013,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="95.62012987013,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\STORE_STAGE to STORE_NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="147,42"
          Id="Package\STORE_STAGE to STORE_NDS\Add SourceID"
          TopLeft="241,138" />
        <NodeLayout
          Size="223,42"
          Id="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS"
          TopLeft="198,213" />
        <NodeLayout
          Size="180,42"
          Id="Package\STORE_STAGE to STORE_NDS\Update Data if exists"
          TopLeft="60,370" />
        <NodeLayout
          Size="160,42"
          Id="Package\STORE_STAGE to STORE_NDS\STORE_STAGE"
          TopLeft="229,57" />
        <NodeLayout
          Size="189,42"
          Id="Package\STORE_STAGE to STORE_NDS\Insert data if not exists"
          TopLeft="414,365" />
        <EdgeLayout
          Id="Package\STORE_STAGE to STORE_NDS.Paths[Derived Column Output]"
          TopLeft="312,180">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\STORE_STAGE to STORE_NDS.Paths[OLE DB Source Output]"
          TopLeft="311.75,99">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\STORE_STAGE to STORE_NDS.Paths[Lookup No Match Output]"
          TopLeft="345.333333333333,255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="163.166666666667,110"
              Start="0,0"
              End="163.166666666667,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.4701691896705" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.4701691896705"
                    Point2="0,44.4701691896705"
                    Point3="4,44.4701691896705" />
                  <mssgle:LineSegment
                    End="159.166666666667,44.4701691896705" />
                  <mssgle:CubicBezierSegment
                    Point1="159.166666666667,44.4701691896705"
                    Point2="163.166666666667,44.4701691896705"
                    Point3="163.166666666667,48.4701691896705" />
                  <mssgle:LineSegment
                    End="163.166666666667,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="25.7769466145833,49.4701691896705,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\STORE_STAGE to STORE_NDS.Paths[Lookup Match Output]"
          TopLeft="273.666666666667,255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-123.666666666667,115"
              Start="0,0"
              End="-123.666666666667,107.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.4915405164737" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.4915405164737"
                    Point2="0,46.4915405164737"
                    Point3="-4,46.4915405164737" />
                  <mssgle:LineSegment
                    End="-119.666666666667,46.4915405164737" />
                  <mssgle:CubicBezierSegment
                    Point1="-119.666666666667,46.4915405164737"
                    Point2="-123.666666666667,46.4915405164737"
                    Point3="-123.666666666667,50.4915405164737" />
                  <mssgle:LineSegment
                    End="-123.666666666667,107.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-110.024720052083,51.4915405164737,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\STORE_STAGE to STORE_NDS\Insert data if not exists">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\STORE_STAGE to STORE_NDS\STORE_STAGE">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>
<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/13/2023 9:56:12 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-EO3ARNL"
  DTS:CreatorName="DESKTOP-EO3ARNL\hoang"
  DTS:DTSID="{A54BD3FA-EB62-4D43-8357-7F39C70EFAD1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5314.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="41"
  DTS:VersionGUID="{B189954F-DCE5-46CB-9DEB-D57F84EFEF83}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.SEMINAR_METADATA]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{D48A9EB8-1844-430D-B730-9FBE1CE2059D}"
      DTS:ObjectName="LocalHost.SEMINAR_METADATA">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=SEMINAR_METADATA;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{D48A9EB8-1844-430D-B730-9FBE1CE2059D}LocalHost.SEMINAR_METADATA;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0AD03B26-EAC4-4549-95F5-B35668607000}"
      DTS:ObjectName="LocalHost.SEMINAR_NDS">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=SEMINAR_NDS;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{0AD03B26-EAC4-4549-95F5-B35668607000}LocalHost.SEMINAR_NDS;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.SEMINAR_SOURCE]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{7A2DC85F-3F7C-4269-B738-FC6B51C2DBD2}"
      DTS:ObjectName="LocalHost.SEMINAR_SOURCE">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=SEMINAR_SOURCE;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{7A2DC85F-3F7C-4269-B738-FC6B51C2DBD2}LocalHost.SEMINAR_SOURCE;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0D82B8DF-B8D5-40F3-A6EF-4F412C487344}"
      DTS:ObjectName="LocalHost.SEMINAR_STAGE1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=SEMINAR_STAGE;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{0D82B8DF-B8D5-40F3-A6EF-4F412C487344}LocalHost.SEMINAR_STAGE1;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{483F5C03-39EC-4242-8D99-42B9580097BC}"
      DTS:ObjectName="LocalHost.SEMINAR_STAGE1 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=SEMINAR_STAGE;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{483F5C03-39EC-4242-8D99-42B9580097BC}LocalHost.SEMINAR_STAGE1;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B6CE0354-14D7-493A-8463-5262D1B3767C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CET">
      <DTS:VariableValue
        DTS:DataType="7">11/18/2023 12:48:09 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1F68F83D-EAEC-4814-BD8E-381C58A65E3C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LSET">
      <DTS:VariableValue
        DTS:DataType="7">11/18/2023 12:48:16 PM</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{8b929d5b-4921-4986-9789-24112816e2a9}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="LOAD DATA FROM STAGE TO BRAND_NDS">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{f50989c5-3232-4819-8136-270923cbf6f9}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="BRAND_STAGE to BRAND_NDS"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add SourceID"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                          name="SourceID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">1</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="BRAND _STAGE"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[BRAND_STAGE]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT *
FROM BRAND_STAGE
WHERE (CreateDay &gt;= ? and CreateDay &lt; ?) or (UpdateDay &gt;= ? and UpdateDay &lt; ?)</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter1:Input",{B6CE0354-14D7-493A-8463-5262D1B3767C};"Parameter2:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter3:Input",{B6CE0354-14D7-493A-8463-5262D1B3767C};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[BrandID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandID]"
                          name="BrandID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[BrandName]"
                          length="500"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandName]"
                          name="BrandName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                          name="CreateDay"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                          name="UpdateDay"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[BrandID]"
                          dataType="i4"
                          name="BrandID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[BrandName]"
                          dataType="wstr"
                          length="500"
                          name="BrandName" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                          dataType="dbTimeStamp"
                          name="CreateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                          dataType="dbTimeStamp"
                          name="UpdateDay" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[BrandID]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[BrandID]"
                          name="BrandID" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[BrandName]"
                          dataType="wstr"
                          length="500"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[BrandName]"
                          name="BrandName" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                          dataType="dbTimeStamp"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                          name="CreateDay" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                          dataType="dbTimeStamp"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                          name="UpdateDay" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check exists in BRAND_NDS"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        BrandNK
FROM            dbo.BRAND_NDS
WHERE        (SourceID = 1)</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        BrandNK
FROM            dbo.BRAND_NDS
WHERE        (SourceID = 1)) [refTable]
where [refTable].[BrandNK] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="BrandNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandID]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Inputs[Lookup Input].Columns[BrandID]"
                          cachedDataType="i4"
                          cachedName="BrandID"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">BrandNK</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert data if not exists"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[BRAND_NDS]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[BrandID]"
                          cachedDataType="i4"
                          cachedName="BrandID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[BrandNK]"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandID]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[BrandName]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="BrandName"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandName]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CreateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CreateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[UpdateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="UpdateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[SourceID]"
                          cachedDataType="i4"
                          cachedName="SourceID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[BrandSK]"
                          dataType="i4"
                          name="BrandSK" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[BrandNK]"
                          dataType="i4"
                          name="BrandNK" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                          dataType="i4"
                          name="SourceID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                          dataType="wstr"
                          length="500"
                          name="BrandName" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                          dataType="dbTimeStamp"
                          name="CreateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                          dataType="dbTimeStamp"
                          name="UpdateDay" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update Data if exists"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update BRAND_NDS
Set BrandName = ?,
CreateDay = ?,
UpdateDay = ?
where BrandNK = ? and SourceID = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[BrandName]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="BrandName"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandName]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CreateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CreateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[UpdateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="UpdateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[BrandID]"
                          cachedDataType="i4"
                          cachedName="BrandID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output].Columns[BrandID]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[SourceID]"
                          cachedDataType="i4"
                          cachedName="SourceID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="wstr"
                          length="500"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="dbTimeStamp"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          dataType="dbTimeStamp"
                          name="Param_2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          dataType="i4"
                          name="Param_3">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          dataType="i4"
                          name="Param_4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS.Paths[Derived Column Output]"
                  endId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Inputs[Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID.Outputs[Derived Column Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS.Paths[Lookup Match Output]"
                  endId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
                  name="Lookup Match Output"
                  startId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS.Paths[Lookup No Match Output]"
                  endId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS.Paths[OLE DB Source Output]"
                  endId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS\GET LSET, CET"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Get last success extract"
          DTS:DTSID="{3f6bcb7e-55a4-4b0e-b138-35277d72f051}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="GET LSET, CET"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D48A9EB8-1844-430D-B730-9FBE1CE2059D}"
              SQLTask:SqlStatementSource="SELECT LSET, CET&#xA;FROM Data_Flow&#xA;WHERE TableName = 'BRAND'&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="LSET"
                SQLTask:DtsVariableName="User::LSET" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="CET"
                SQLTask:DtsVariableName="User::CET" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\LOAD DATA FROM STAGE TO BRAND_NDS.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{3D69BD5F-F4D5-46EA-AF4D-94D45395ED57}"
          DTS:From="Package\LOAD DATA FROM STAGE TO BRAND_NDS\GET LSET, CET"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{5815b03d-660f-4502-8c7a-52953aa83841}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="LOAD DATA FROM STAGE TO CATEGORY_NDS">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{f3fa9d7c-a40b-459b-b73a-7b8dfd655141}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="CATEGORY_STAGE to CATEGORY_NDS"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add SourceID"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                          name="SourceID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">1</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="CATEGORY _STAGE"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[CATEGORY_STAGE]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT *
FROM CATEGORY_STAGE
WHERE (CreateDay &gt;= ? and CreateDay &lt; ?) or (UpdateDay &gt;= ? and UpdateDay &lt; ?)</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter1:Input",{B6CE0354-14D7-493A-8463-5262D1B3767C};"Parameter2:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter3:Input",{B6CE0354-14D7-493A-8463-5262D1B3767C};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                          name="CreateDay"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                          name="UpdateDay"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CategoryID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]"
                          name="CategoryID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CategoryName]"
                          length="500"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryName]"
                          name="CategoryName"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                          dataType="dbTimeStamp"
                          name="CreateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                          dataType="dbTimeStamp"
                          name="UpdateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CategoryID]"
                          dataType="i4"
                          name="CategoryID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].ExternalColumns[CategoryName]"
                          dataType="wstr"
                          length="500"
                          name="CategoryName" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[CategoryID]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[CategoryID]"
                          name="CategoryID" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[CategoryName]"
                          dataType="wstr"
                          length="500"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[CategoryName]"
                          name="CategoryName" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                          dataType="dbTimeStamp"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                          name="CreateDay" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                          dataType="dbTimeStamp"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                          name="UpdateDay" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check exists in CATEGORY_NDS"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        CategoryNK
FROM            dbo.CATEGORY_NDS
WHERE        (SourceID = 1)</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        CategoryNK
FROM            dbo.CATEGORY_NDS
WHERE        (SourceID = 1)) [refTable]
where [refTable].[CategoryNK] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="CategoryNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Inputs[Lookup Input].Columns[CategoryID]"
                          cachedDataType="i4"
                          cachedName="CategoryID"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">CategoryNK</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert data if not exists"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[CATEGORY_NDS]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CreateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CreateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[UpdateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="UpdateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[SourceID]"
                          cachedDataType="i4"
                          cachedName="SourceID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CategoryID]"
                          cachedDataType="i4"
                          cachedName="CategoryID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CategoryNK]"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CategoryName]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="CategoryName"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CategoryName]"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryName]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                          dataType="i4"
                          name="SourceID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                          dataType="dbTimeStamp"
                          name="CreateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                          dataType="dbTimeStamp"
                          name="UpdateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CategorySK]"
                          dataType="i4"
                          name="CategorySK" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CategoryNK]"
                          dataType="i4"
                          name="CategoryNK" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CategoryName]"
                          dataType="wstr"
                          length="500"
                          name="CategoryName" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update Data if exists"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update CATEGORY_NDS
Set CategoryName = ?,
CreateDay = ?,
UpdateDay = ?
where CategoryNK = ? and SourceID = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CategoryName]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="CategoryName"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryName]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CreateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CreateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[UpdateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="UpdateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CategoryID]"
                          cachedDataType="i4"
                          cachedName="CategoryID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[SourceID]"
                          cachedDataType="i4"
                          cachedName="SourceID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="wstr"
                          length="500"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="dbTimeStamp"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          dataType="dbTimeStamp"
                          name="Param_2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          dataType="i4"
                          name="Param_3">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          dataType="i4"
                          name="Param_4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS.Paths[Derived Column Output]"
                  endId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Inputs[Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Outputs[Derived Column Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS.Paths[Lookup Match Output]"
                  endId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
                  name="Lookup Match Output"
                  startId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS.Paths[Lookup No Match Output]"
                  endId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS.Paths[OLE DB Source Output]"
                  endId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\GET LSET, CET"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Get last success extract"
          DTS:DTSID="{b2834dd1-d89a-4757-b34a-8ae0d01b6cab}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="GET LSET, CET"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D48A9EB8-1844-430D-B730-9FBE1CE2059D}"
              SQLTask:SqlStatementSource="SELECT LSET, CET&#xA;FROM Data_Flow&#xA;WHERE TableName = 'CATEGORY'&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="LSET"
                SQLTask:DtsVariableName="User::LSET" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="CET"
                SQLTask:DtsVariableName="User::CET" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{FE533DF0-8E0C-4F6A-BACD-137E85B8654C}"
          DTS:From="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\GET LSET, CET"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{be6c299a-548a-4b7f-b1ce-f3b8110bac47}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="LOAD DATA FROM STAGE TO DIRECTORY_NDS">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{b769a47e-5f4b-4a3d-905e-a378a82992e7}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="DIRECTORY_STAGE to DIRECTORY_NDS"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add SourceID"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                          name="SourceID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">1</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check exists in DIRECTORY_NDS"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        DirectoryNK
FROM            dbo.DIRECTORY_NDS
WHERE        (SourceID = 1)</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        DirectoryNK
FROM            dbo.DIRECTORY_NDS
WHERE        (SourceID = 1)) [refTable]
where [refTable].[DirectoryNK] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DirectoryNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryID]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Inputs[Lookup Input].Columns[DirectoryID]"
                          cachedDataType="i4"
                          cachedName="DirectoryID"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">DirectoryNK</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="DIRECTORY_STAGE"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[DIRECTORY_STAGE]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT *
FROM DIRECTORY_STAGE
WHERE (CreateDay &gt;= ? and CreateDay &lt; ?) or (UpdateDay &gt;= ? and UpdateDay &lt; ?)</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter1:Input",{B6CE0354-14D7-493A-8463-5262D1B3767C};"Parameter2:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter3:Input",{B6CE0354-14D7-493A-8463-5262D1B3767C};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                          name="CreateDay"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                          name="UpdateDay"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DirectoryID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryID]"
                          name="DirectoryID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DirectoryName]"
                          length="500"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryName]"
                          name="DirectoryName"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                          dataType="dbTimeStamp"
                          name="CreateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                          dataType="dbTimeStamp"
                          name="UpdateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DirectoryID]"
                          dataType="i4"
                          name="DirectoryID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DirectoryName]"
                          dataType="wstr"
                          length="500"
                          name="DirectoryName" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[DirectoryID]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[DirectoryID]"
                          name="DirectoryID" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[DirectoryName]"
                          dataType="wstr"
                          length="500"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[DirectoryName]"
                          name="DirectoryName" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                          dataType="dbTimeStamp"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                          name="CreateDay" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                          dataType="dbTimeStamp"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                          name="UpdateDay" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert data if not exists"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[DIRECTORY_NDS]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CreateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CreateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[UpdateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="UpdateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[DirectoryID]"
                          cachedDataType="i4"
                          cachedName="DirectoryID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DirectoryNK]"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryID]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[SourceID]"
                          cachedDataType="i4"
                          cachedName="SourceID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[DirectoryName]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="DirectoryName"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DirectoryName]"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryName]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                          dataType="i4"
                          name="SourceID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                          dataType="dbTimeStamp"
                          name="CreateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                          dataType="dbTimeStamp"
                          name="UpdateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DirectorySK]"
                          dataType="i4"
                          name="DirectorySK" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DirectoryNK]"
                          dataType="i4"
                          name="DirectoryNK" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DirectoryName]"
                          dataType="wstr"
                          length="500"
                          name="DirectoryName" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update Data if exists"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update DIRECTORY_NDS
Set DirectoryName = ?,
CreateDay = ?,
UpdateDay = ?
where DirectoryNK = ? and SourceID = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[DirectoryName]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="DirectoryName"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryName]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CreateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CreateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[UpdateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="UpdateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[DirectoryID]"
                          cachedDataType="i4"
                          cachedName="DirectoryID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output].Columns[DirectoryID]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[SourceID]"
                          cachedDataType="i4"
                          cachedName="SourceID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="wstr"
                          length="500"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="dbTimeStamp"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          dataType="dbTimeStamp"
                          name="Param_2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          dataType="i4"
                          name="Param_3">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          dataType="i4"
                          name="Param_4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[Derived Column Output]"
                  endId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Inputs[Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Outputs[Derived Column Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[Lookup Match Output]"
                  endId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
                  name="Lookup Match Output"
                  startId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[Lookup No Match Output]"
                  endId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[OLE DB Source Output]"
                  endId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\GET LSET, CET"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Get last success extract"
          DTS:DTSID="{f844423f-00aa-46b7-900c-ac0ef5eee464}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="GET LSET, CET"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D48A9EB8-1844-430D-B730-9FBE1CE2059D}"
              SQLTask:SqlStatementSource="SELECT LSET, CET&#xA;FROM Data_Flow&#xA;WHERE TableName = 'DIRECTORY'&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="LSET"
                SQLTask:DtsVariableName="User::LSET" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="CET"
                SQLTask:DtsVariableName="User::CET" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{A7862CA3-E95A-40C8-A680-922D684B3D2A}"
          DTS:From="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\GET LSET, CET"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{2a8aa4c3-4090-46a6-80a8-6f4c4c9e9d3f}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="LOAD DATA FROM STAGE TO PRODUCT_NDS">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\GET LSET, CET"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Get last success extract"
          DTS:DTSID="{1e148121-c6bd-47c0-b4fe-b2b2b5150f39}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="GET LSET, CET"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D48A9EB8-1844-430D-B730-9FBE1CE2059D}"
              SQLTask:SqlStatementSource="SELECT LSET, CET&#xA;FROM Data_Flow&#xA;WHERE TableName = 'PRODUCT'&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="LSET"
                SQLTask:DtsVariableName="User::LSET" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="CET"
                SQLTask:DtsVariableName="User::CET" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{0493E4B3-64F1-4F12-80CB-0CFF042F7580}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="PRODUCT_STAGE to PRODUCT_NDS"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add SourceID"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                          name="SourceID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">1</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check exists in BRAND_NDS in NDS"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        BrandSK, BrandNK
FROM          dbo.BRAND_NDS
WHERE SourceID =1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        BrandSK, BrandNK
FROM          dbo.BRAND_NDS
WHERE SourceID =1) [refTable]
where [refTable].[BrandNK] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="BrandSK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="BrandNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\202:invalid};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Inputs[Lookup Input].Columns[BrandID]"
                          cachedDataType="i4"
                          cachedName="BrandID"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[BrandID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">BrandNK</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Match Output].Columns[BrandSK]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Match Output].Columns[BrandSK]"
                          name="BrandSK"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">BrandSK</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check exists in CATEGORY_NDS in NDS"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        CategorySK, CategoryNK
FROM            dbo.CATEGORY_NDS
WHERE SourceID = 1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        CategorySK, CategoryNK
FROM            dbo.CATEGORY_NDS
WHERE SourceID = 1) [refTable]
where [refTable].[CategoryNK] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="CategorySK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CategoryNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\200:invalid};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Inputs[Lookup Input].Columns[CategoryID]"
                          cachedDataType="i4"
                          cachedName="CategoryID"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">CategoryNK</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Match Output].Columns[CategorySK]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Match Output].Columns[CategorySK]"
                          name="CategorySK"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">CategorySK</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check exists in DIRECTORY_NDS in NDS"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        DirectorySK, DirectoryNK
FROM            dbo.DIRECTORY_NDS
WHERE        (SourceID = 1)</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        DirectorySK, DirectoryNK
FROM            dbo.DIRECTORY_NDS
WHERE        (SourceID = 1)) [refTable]
where [refTable].[DirectoryNK] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DirectorySK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DirectoryNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\204:invalid};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Inputs[Lookup Input].Columns[DanhmucID]"
                          cachedDataType="i4"
                          cachedName="DanhmucID"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[DanhmucID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">DirectoryNK</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Match Output].Columns[DirectorySK]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Match Output].Columns[DirectorySK]"
                          name="DirectorySK"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">DirectorySK</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check exists in DIRECTORY_NDS in NDS 1"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        StoreSK, StoreNK
FROM            dbo.STORE_NDS
WHERE        (SourceID = 1)</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        StoreSK, StoreNK
FROM            dbo.STORE_NDS
WHERE        (SourceID = 1)) [refTable]
where [refTable].[StoreNK] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="StoreSK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StoreNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Inputs[Lookup Input].Columns[StoreID]"
                          cachedDataType="i4"
                          cachedName="StoreID"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">StoreNK</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Match Output].Columns[StoreSK]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Match Output].Columns[StoreSK]"
                          name="StoreSK"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">StoreSK</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check exists in PRODUCT_NDS"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        ProductNK

FROM            dbo.PRODUCT_NDS

WHERE        (SourceID = 1)</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        ProductNK

FROM            dbo.PRODUCT_NDS

WHERE        (SourceID = 1)) [refTable]
where [refTable].[ProductNK] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ProductNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\201:invalid};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Inputs[Lookup Input].Columns[ProductID]"
                          cachedDataType="i4"
                          cachedName="ProductID"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ProductNK</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert data if not exists"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[PRODUCT_NDS]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CreateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CreateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[UpdateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="UpdateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[ProductID]"
                          cachedDataType="i4"
                          cachedName="ProductID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ProductNK]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductID]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[ProductName]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="ProductName"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ProductName]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductName]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[ShortDescription]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="ShortDescription"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ShortDescription]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ShortDescription]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[Price]"
                          cachedDataType="i4"
                          cachedName="Price"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[Price]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Price]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[SourceID]"
                          cachedDataType="i4"
                          cachedName="SourceID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[ReviewCount]"
                          cachedDataType="i4"
                          cachedName="ReviewCount"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ReviewCount]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ReviewCount]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[Rating]"
                          cachedDataType="r8"
                          cachedName="Rating"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[Rating]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Rating]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[QuantitySold]"
                          cachedDataType="i4"
                          cachedName="QuantitySold"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[QuantitySold]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[QuantitySold]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[DiscountRate]"
                          cachedDataType="i4"
                          cachedName="DiscountRate"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DiscountRate]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[DiscountRate]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[OriginalPrice]"
                          cachedDataType="i4"
                          cachedName="OriginalPrice"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[OriginalPrice]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[OriginalPrice]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[Discount]"
                          cachedDataType="i4"
                          cachedName="Discount"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[Discount]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Discount]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[BrandSK]"
                          cachedDataType="i4"
                          cachedName="BrandSK"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[BrandID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Match Output].Columns[BrandSK]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CategorySK]"
                          cachedDataType="i4"
                          cachedName="CategorySK"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CategoryID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Match Output].Columns[CategorySK]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[StoreSK]"
                          cachedDataType="i4"
                          cachedName="StoreSK"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Match Output].Columns[StoreSK]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[DirectorySK]"
                          cachedDataType="i4"
                          cachedName="DirectorySK"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DanhmucID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Match Output].Columns[DirectorySK]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                          dataType="i4"
                          name="SourceID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                          dataType="dbTimeStamp"
                          name="CreateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                          dataType="dbTimeStamp"
                          name="UpdateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ProductSK]"
                          dataType="i4"
                          name="ProductSK" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ProductNK]"
                          dataType="i4"
                          name="ProductNK" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[BrandID]"
                          dataType="i4"
                          name="BrandID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CategoryID]"
                          dataType="i4"
                          name="CategoryID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreID]"
                          dataType="i4"
                          name="StoreID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DanhmucID]"
                          dataType="i4"
                          name="DanhmucID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ProductName]"
                          dataType="wstr"
                          length="500"
                          name="ProductName" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ShortDescription]"
                          dataType="wstr"
                          length="4000"
                          name="ShortDescription" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[Price]"
                          dataType="i4"
                          name="Price" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[OriginalPrice]"
                          dataType="i4"
                          name="OriginalPrice" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[Discount]"
                          dataType="i4"
                          name="Discount" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[DiscountRate]"
                          dataType="i4"
                          name="DiscountRate" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[QuantitySold]"
                          dataType="i4"
                          name="QuantitySold" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[Rating]"
                          dataType="r8"
                          name="Rating" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[ReviewCount]"
                          dataType="i4"
                          name="ReviewCount" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="PRODUCT_STAGE"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[PRODUCT_STAGE]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT *
FROM STORE_STAGE
WHERE (CreateDay &gt;= ? and CreateDay &lt; ?) or (UpdateDay &gt;= ? and UpdateDay &lt; ?)</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter1:Input",{B6CE0354-14D7-493A-8463-5262D1B3767C};"Parameter2:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter3:Input",{B6CE0354-14D7-493A-8463-5262D1B3767C};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                          name="CreateDay"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                          name="UpdateDay"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]"
                          name="StoreID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ProductID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductID]"
                          name="ProductID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[BrandID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[BrandID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[BrandID]"
                          name="BrandID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CategoryID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[CategoryID]"
                          name="CategoryID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[DanhmucID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DanhmucID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[DanhmucID]"
                          name="DanhmucID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ProductName]"
                          length="500"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductName]"
                          name="ProductName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ShortDescription]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ShortDescription]"
                          length="4000"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ShortDescription]"
                          name="ShortDescription"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Price]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[Price]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Price]"
                          name="Price"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[OriginalPrice]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[OriginalPrice]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[OriginalPrice]"
                          name="OriginalPrice"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Discount]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[Discount]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Discount]"
                          name="Discount"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[DiscountRate]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DiscountRate]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[DiscountRate]"
                          name="DiscountRate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[QuantitySold]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[QuantitySold]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[QuantitySold]"
                          name="QuantitySold"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Rating]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[Rating]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Rating]"
                          name="Rating"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ReviewCount]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ReviewCount]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ReviewCount]"
                          name="ReviewCount"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                          dataType="dbTimeStamp"
                          name="CreateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                          dataType="dbTimeStamp"
                          name="UpdateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreID]"
                          dataType="i4"
                          name="StoreID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ProductID]"
                          dataType="i4"
                          name="ProductID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[BrandID]"
                          dataType="i4"
                          name="BrandID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CategoryID]"
                          dataType="i4"
                          name="CategoryID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DanhmucID]"
                          dataType="i4"
                          name="DanhmucID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ProductName]"
                          dataType="wstr"
                          length="500"
                          name="ProductName" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ShortDescription]"
                          dataType="wstr"
                          length="4000"
                          name="ShortDescription" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[Price]"
                          dataType="i4"
                          name="Price" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[OriginalPrice]"
                          dataType="i4"
                          name="OriginalPrice" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[Discount]"
                          dataType="i4"
                          name="Discount" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[DiscountRate]"
                          dataType="i4"
                          name="DiscountRate" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[QuantitySold]"
                          dataType="i4"
                          name="QuantitySold" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[Rating]"
                          dataType="r8"
                          name="Rating" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].ExternalColumns[ReviewCount]"
                          dataType="i4"
                          name="ReviewCount" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ProductID]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ProductID]"
                          name="ProductID" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[BrandID]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[BrandID]"
                          name="BrandID" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[CategoryID]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[CategoryID]"
                          name="CategoryID" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreID]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreID]"
                          name="StoreID" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[DanhmucID]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[DanhmucID]"
                          name="DanhmucID" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ProductName]"
                          dataType="wstr"
                          length="500"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ProductName]"
                          name="ProductName" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ShortDescription]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ShortDescription]"
                          name="ShortDescription" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[Price]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[Price]"
                          name="Price" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[OriginalPrice]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[OriginalPrice]"
                          name="OriginalPrice" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[Discount]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[Discount]"
                          name="Discount" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[DiscountRate]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[DiscountRate]"
                          name="DiscountRate" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[QuantitySold]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[QuantitySold]"
                          name="QuantitySold" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[Rating]"
                          dataType="r8"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[Rating]"
                          name="Rating" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ReviewCount]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ReviewCount]"
                          name="ReviewCount" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                          dataType="dbTimeStamp"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                          name="CreateDay" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                          dataType="dbTimeStamp"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                          name="UpdateDay" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update Data if exists"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE PRODUCT_NDS
SET BrandID = ?,
CategoryID = ?,
StoreID = ?,
DanhmucID = ?,
ProductName = ?,
ShortDescription = ?,
Price =?,
OriginalPrice = ?,
Discount = ?,
DiscountRate = ?,
QuantitySold = ?,
Rating = ?,
ReviewCount = ?,
CreateDay = ?,
UpdateDay = ?
WHERE ProductNK = ? and SourceID = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[ProductName]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="ProductName"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductName]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[ShortDescription]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="ShortDescription"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ShortDescription]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[Price]"
                          cachedDataType="i4"
                          cachedName="Price"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Price]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[OriginalPrice]"
                          cachedDataType="i4"
                          cachedName="OriginalPrice"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[OriginalPrice]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[Discount]"
                          cachedDataType="i4"
                          cachedName="Discount"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Discount]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[DiscountRate]"
                          cachedDataType="i4"
                          cachedName="DiscountRate"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[DiscountRate]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[QuantitySold]"
                          cachedDataType="i4"
                          cachedName="QuantitySold"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[QuantitySold]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[Rating]"
                          cachedDataType="r8"
                          cachedName="Rating"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[Rating]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[ReviewCount]"
                          cachedDataType="i4"
                          cachedName="ReviewCount"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ReviewCount]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CreateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CreateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[UpdateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="UpdateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[ProductID]"
                          cachedDataType="i4"
                          cachedName="ProductID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output].Columns[ProductID]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[SourceID]"
                          cachedDataType="i4"
                          cachedName="SourceID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[BrandSK]"
                          cachedDataType="i4"
                          cachedName="BrandSK"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Match Output].Columns[BrandSK]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CategorySK]"
                          cachedDataType="i4"
                          cachedName="CategorySK"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Match Output].Columns[CategorySK]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[StoreSK]"
                          cachedDataType="i4"
                          cachedName="StoreSK"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Match Output].Columns[StoreSK]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[DirectorySK]"
                          cachedDataType="i4"
                          cachedName="DirectorySK"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Match Output].Columns[DirectorySK]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="i4"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="i4"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          dataType="i4"
                          name="Param_2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          dataType="i4"
                          name="Param_3">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          dataType="wstr"
                          length="500"
                          name="Param_4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                          dataType="wstr"
                          length="4000"
                          name="Param_5">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                          dataType="i4"
                          name="Param_6">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                          dataType="i4"
                          name="Param_7">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                          dataType="i4"
                          name="Param_8">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                          dataType="i4"
                          name="Param_9">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                          dataType="i4"
                          name="Param_10">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                          dataType="r8"
                          name="Param_11">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                          dataType="i4"
                          name="Param_12">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                          dataType="dbTimeStamp"
                          name="Param_13">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                          dataType="dbTimeStamp"
                          name="Param_14">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                          dataType="i4"
                          name="Param_15">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                          dataType="i4"
                          name="Param_16">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[Derived Column Output]"
                  endId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Inputs[Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Outputs[Derived Column Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output]"
                  endId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
                  name="Lookup Match Output"
                  startId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output1]"
                  endId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output2]"
                  endId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output3]"
                  endId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output4]"
                  endId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup No Match Output]"
                  endId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[OLE DB Source Output]"
                  endId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{0EAEA590-1DCB-4D96-A7A7-079876A0849A}"
          DTS:From="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\GET LSET, CET"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\LOAD DATA FROM STAGE TO STORE_NDS"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{ae1aedb6-abf8-4e23-ba18-7257b41b2855}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="LOAD DATA FROM STAGE TO STORE_NDS">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\GET LSET, CET"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Get last success extract"
          DTS:DTSID="{2f634dc7-f2de-49cc-b97a-c5b979859b07}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="GET LSET, CET"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D48A9EB8-1844-430D-B730-9FBE1CE2059D}"
              SQLTask:SqlStatementSource="SELECT LSET, CET&#xA;FROM Data_Flow&#xA;WHERE TableName = 'STORE'&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="LSET"
                SQLTask:DtsVariableName="User::LSET" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="CET"
                SQLTask:DtsVariableName="User::CET" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{81d66bdd-93ad-476a-82db-90ac58aa51bf}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="STORE_STAGE to STORE_NDS"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add SourceID"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]"
                          name="SourceID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">1</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check exists in STORE_NDS"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT        StoreNK

FROM            dbo.STORE_NDS

WHERE        (SourceID = 1)</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT        StoreNK

FROM            dbo.STORE_NDS

WHERE        (SourceID = 1)) [refTable]
where [refTable].[StoreNK] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="StoreNK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Inputs[Lookup Input].Columns[StoreID]"
                          cachedDataType="i4"
                          cachedName="StoreID"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">StoreNK</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert data if not exists"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[STORE_NDS]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[SourceID]"
                          cachedDataType="i4"
                          cachedName="SourceID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[CreateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CreateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[UpdateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="UpdateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[StoreID]"
                          cachedDataType="i4"
                          cachedName="StoreID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreNK]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[StoreName]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="StoreName"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreName]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreName]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[StoreOfficial]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="StoreOfficial"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreOfficial]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreOfficial]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[StoreAVGRating]"
                          cachedDataType="r8"
                          cachedName="StoreAVGRating"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreAVGRating]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreAVGRating]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[StoreReviewCount]"
                          cachedDataType="i4"
                          cachedName="StoreReviewCount"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreReviewCount]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreReviewCount]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].Columns[StoreTotalFollower]"
                          cachedDataType="i4"
                          cachedName="StoreTotalFollower"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreTotalFollower]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreTotalFollower]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                          dataType="i4"
                          name="SourceID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[CreateDay]"
                          dataType="dbTimeStamp"
                          name="CreateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[UpdateDay]"
                          dataType="dbTimeStamp"
                          name="UpdateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreSK]"
                          dataType="i4"
                          name="StoreSK" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreNK]"
                          dataType="i4"
                          name="StoreNK" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreName]"
                          dataType="wstr"
                          length="500"
                          name="StoreName" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreOfficial]"
                          dataType="wstr"
                          length="100"
                          name="StoreOfficial" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreAVGRating]"
                          dataType="r8"
                          name="StoreAVGRating" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreReviewCount]"
                          dataType="i4"
                          name="StoreReviewCount" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input].ExternalColumns[StoreTotalFollower]"
                          dataType="i4"
                          name="StoreTotalFollower" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="STORE_STAGE"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[STORE_STAGE]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT *
FROM STORE_STAGE
WHERE (CreateDay &gt;= ? and CreateDay &lt; ?) or (UpdateDay &gt;= ? and UpdateDay &lt; ?)</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter1:Input",{B6CE0354-14D7-493A-8463-5262D1B3767C};"Parameter2:Input",{1F68F83D-EAEC-4814-BD8E-381C58A65E3C};"Parameter3:Input",{B6CE0354-14D7-493A-8463-5262D1B3767C};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_STAGE1]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]"
                          name="CreateDay"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]"
                          name="UpdateDay"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreID]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]"
                          name="StoreID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreName]"
                          length="500"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreName]"
                          name="StoreName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreOfficial]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreOfficial]"
                          length="100"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreOfficial]"
                          name="StoreOfficial"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreAVGRating]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreAVGRating]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreAVGRating]"
                          name="StoreAVGRating"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreReviewCount]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreReviewCount]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreReviewCount]"
                          name="StoreReviewCount"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreTotalFollower]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreTotalFollower]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreTotalFollower]"
                          name="StoreTotalFollower"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[CreateDay]"
                          dataType="dbTimeStamp"
                          name="CreateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[UpdateDay]"
                          dataType="dbTimeStamp"
                          name="UpdateDay" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreID]"
                          dataType="i4"
                          name="StoreID" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreName]"
                          dataType="wstr"
                          length="500"
                          name="StoreName" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreOfficial]"
                          dataType="wstr"
                          length="100"
                          name="StoreOfficial" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreAVGRating]"
                          dataType="r8"
                          name="StoreAVGRating" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreReviewCount]"
                          dataType="i4"
                          name="StoreReviewCount" />
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].ExternalColumns[StoreTotalFollower]"
                          dataType="i4"
                          name="StoreTotalFollower" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreID]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreID]"
                          name="StoreID" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreName]"
                          dataType="wstr"
                          length="500"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreName]"
                          name="StoreName" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreOfficial]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreOfficial]"
                          name="StoreOfficial" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreAVGRating]"
                          dataType="r8"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreAVGRating]"
                          name="StoreAVGRating" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreReviewCount]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreReviewCount]"
                          name="StoreReviewCount" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreTotalFollower]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[StoreTotalFollower]"
                          name="StoreTotalFollower" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                          dataType="dbTimeStamp"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[CreateDay]"
                          name="CreateDay" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                          dataType="dbTimeStamp"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[UpdateDay]"
                          name="UpdateDay" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update Data if exists"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update STORE_NDS
Set StoreName = ?,
StoreOfficial = ?,
StoreAVGRating = ?,
StoreReviewCount = ?,
StoreTotalFollower = ?,
CreateDay = ?,
UpdateDay = ?
where StoreNK = ? and SourceID = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.SEMINAR_NDS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[StoreName]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="StoreName"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreName]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[StoreOfficial]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="StoreOfficial"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreOfficial]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[StoreAVGRating]"
                          cachedDataType="r8"
                          cachedName="StoreAVGRating"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreAVGRating]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[StoreReviewCount]"
                          cachedDataType="i4"
                          cachedName="StoreReviewCount"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreReviewCount]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[StoreTotalFollower]"
                          cachedDataType="i4"
                          cachedName="StoreTotalFollower"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreTotalFollower]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[CreateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CreateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[CreateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[UpdateDay]"
                          cachedDataType="dbTimeStamp"
                          cachedName="UpdateDay"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[UpdateDay]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[StoreID]"
                          cachedDataType="i4"
                          cachedName="StoreID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output].Columns[StoreID]" />
                        <inputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].Columns[SourceID]"
                          cachedDataType="i4"
                          cachedName="SourceID"
                          externalMetadataColumnId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Output].Columns[SourceID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="wstr"
                          length="500"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="wstr"
                          length="100"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          dataType="r8"
                          name="Param_2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          dataType="i4"
                          name="Param_3">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          dataType="i4"
                          name="Param_4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                          dataType="dbTimeStamp"
                          name="Param_5">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                          dataType="dbTimeStamp"
                          name="Param_6">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                          dataType="i4"
                          name="Param_7">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                          dataType="i4"
                          name="Param_8">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS.Paths[Derived Column Output]"
                  endId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Inputs[Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID.Outputs[Derived Column Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS.Paths[Lookup Match Output]"
                  endId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists.Inputs[OLE DB Command Input]"
                  name="Lookup Match Output"
                  startId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS.Paths[Lookup No Match Output]"
                  endId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS.Paths[OLE DB Source Output]"
                  endId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\LOAD DATA FROM STAGE TO STORE_NDS.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{40C40FA9-2E53-4926-A590-6A888A028987}"
          DTS:From="Package\LOAD DATA FROM STAGE TO STORE_NDS\GET LSET, CET"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{8C82090E-6F1F-4AD6-9343-C99BB9CEBB9C}"
      DTS:From="Package\LOAD DATA FROM STAGE TO BRAND_NDS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{B9A40124-A778-4789-BD71-31B25ABD7B68}"
      DTS:From="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{B5E30AB7-708C-45AE-9D11-49FB18CBF37C}"
      DTS:From="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\LOAD DATA FROM STAGE TO STORE_NDS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{1EA8EE8B-DF70-4C37-98E4-79C1307572C5}"
      DTS:From="Package\LOAD DATA FROM STAGE TO STORE_NDS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="160,42"
          Id="Package\LOAD DATA FROM STAGE TO BRAND_NDS\GET LSET, CET"
          TopLeft="105.138888888889,22.194444444444" />
        <NodeLayout
          Size="244,42"
          Id="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS"
          TopLeft="61.4285714285716,109.857142857143" />
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO BRAND_NDS.PrecedenceConstraints[Constraint 1]"
          TopLeft="184.28373015873,64.194444444444">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.6626984126988"
              Start="0,0"
              End="0,38.1626984126988">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.1626984126988" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="356,207"
          Size="356,250"
          Id="Package\LOAD DATA FROM STAGE TO BRAND_NDS"
          TopLeft="105.284992784993,147.912337662338" />
        <NodeLayout
          Size="160,42"
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\GET LSET, CET"
          TopLeft="105.138888888889,22.194444444444" />
        <NodeLayout
          Size="275,42"
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS"
          TopLeft="52.6507936507937,107.52380952381" />
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS.PrecedenceConstraints[Constraint]"
          TopLeft="187.644841269841,64.194444444444">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.3293650793655"
              Start="0,0"
              End="0,35.8293650793655">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.8293650793655" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="368,202"
          Size="368,245"
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS"
          TopLeft="520.631313131314,460.287157287157" />
        <NodeLayout
          Size="160,42"
          Id="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\GET LSET, CET"
          TopLeft="94.3055555555558,20.5277777777773" />
        <NodeLayout
          Size="290,42"
          Id="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS"
          TopLeft="25.714285714286,101.571428571428" />
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS.PrecedenceConstraints[Constraint]"
          TopLeft="172.509920634921,62.5277777777773">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.0436507936511"
              Start="0,0"
              End="0,31.5436507936511">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5436507936511" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="356,199"
          Size="356,242"
          Id="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS"
          TopLeft="517.103174603174,141.001443001443" />
        <NodeLayout
          Size="160,42"
          Id="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\GET LSET, CET"
          TopLeft="105.138888888889,22.194444444444" />
        <NodeLayout
          Size="296,42"
          Id="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS"
          TopLeft="31.5714285714291,102.428571428571" />
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS.PrecedenceConstraints[Constraint]"
          TopLeft="182.355158730159,64.194444444444">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.2341269841274"
              Start="0,0"
              End="0,30.7341269841274">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.7341269841274" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="356,199"
          Size="356,242"
          Id="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS"
          TopLeft="979.960317460318,141.001443001443" />
        <NodeLayout
          Size="160,42"
          Id="Package\LOAD DATA FROM STAGE TO STORE_NDS\GET LSET, CET"
          TopLeft="105.138888888889,22.194444444444" />
        <NodeLayout
          Size="242,42"
          Id="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS"
          TopLeft="61.5079365079373,99.2222222222223" />
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO STORE_NDS.PrecedenceConstraints[Constraint]"
          TopLeft="183.823412698413,64.194444444444">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.0277777777783"
              Start="0,0"
              End="0,27.5277777777783">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5277777777783" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="356,194"
          Size="356,237"
          Id="Package\LOAD DATA FROM STAGE TO STORE_NDS"
          TopLeft="981.095238095239,456.398268398268" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="461.284992784993,260.95689033189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="55.8181818181816,0"
              Start="0,0"
              End="48.3181818181816,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="48.3181818181816,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="873.103174603175,262.001443001443">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="106.857142857143,0"
              Start="0,0"
              End="99.3571428571427,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="99.3571428571427,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="1158.52777777778,383.001443001443">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,73.3968253968254"
              Start="0,0"
              End="0,65.8968253968254">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.8968253968254" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="981.095238095239,578.842712842713">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-92.4639249639249,0"
              Start="0,0"
              End="-84.9639249639249,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-84.9639249639249,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="164,42"
          Id="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE"
          TopLeft="536,103" />
        <NodeLayout
          Size="189,42"
          Id="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists"
          TopLeft="723,408" />
        <NodeLayout
          Size="180,42"
          Id="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Update Data if exists"
          TopLeft="369,413" />
        <NodeLayout
          Size="147,42"
          Id="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Add SourceID"
          TopLeft="550,181" />
        <NodeLayout
          Size="224,42"
          Id="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS"
          TopLeft="507,256" />
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS.Paths[OLE DB Source Output]"
          TopLeft="620.75,145">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS.Paths[Lookup No Match Output]"
          TopLeft="655,298">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="162.5,110"
              Start="0,0"
              End="162.5,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.468085106383" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.468085106383"
                    Point2="0,44.468085106383"
                    Point3="4,44.468085106383" />
                  <mssgle:LineSegment
                    End="158.5,44.468085106383" />
                  <mssgle:CubicBezierSegment
                    Point1="158.5,44.468085106383"
                    Point2="162.5,44.468085106383"
                    Point3="162.5,48.468085106383" />
                  <mssgle:LineSegment
                    End="162.5,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="25.44361328125,49.468085106383,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS.Paths[Lookup Match Output]"
          TopLeft="583,298">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-124,115"
              Start="0,0"
              End="-124,107.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.4893617021277" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.4893617021277"
                    Point2="0,46.4893617021277"
                    Point3="-4,46.4893617021277" />
                  <mssgle:LineSegment
                    End="-120,46.4893617021277" />
                  <mssgle:CubicBezierSegment
                    Point1="-120,46.4893617021277"
                    Point2="-124,46.4893617021277"
                    Point3="-124,50.4893617021277" />
                  <mssgle:LineSegment
                    End="-124,107.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-110.19138671875,51.4893617021277,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS.Paths[Derived Column Output]"
          TopLeft="621.25,223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Insert data if not exists">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\BRAND _STAGE">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO BRAND_NDS\BRAND_STAGE to BRAND_NDS\Check exists in BRAND_NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="187,42"
          Id="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE"
          TopLeft="227,60" />
        <NodeLayout
          Size="189,42"
          Id="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists"
          TopLeft="414,365" />
        <NodeLayout
          Size="180,42"
          Id="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Update Data if exists"
          TopLeft="60,370" />
        <NodeLayout
          Size="147,42"
          Id="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Add SourceID"
          TopLeft="241,138" />
        <NodeLayout
          Size="247,42"
          Id="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS"
          TopLeft="198,213" />
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS.Paths[OLE DB Source Output]"
          TopLeft="317.5,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS.Paths[Lookup No Match Output]"
          TopLeft="361.333333333333,255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="147.166666666667,110"
              Start="0,0"
              End="147.166666666667,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.424778761062" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.424778761062"
                    Point2="0,44.424778761062"
                    Point3="4,44.424778761062" />
                  <mssgle:LineSegment
                    End="143.166666666667,44.424778761062" />
                  <mssgle:CubicBezierSegment
                    Point1="143.166666666667,44.424778761062"
                    Point2="147.166666666667,44.424778761062"
                    Point3="147.166666666667,48.424778761062" />
                  <mssgle:LineSegment
                    End="147.166666666667,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="17.7769466145833,49.424778761062,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS.Paths[Lookup Match Output]"
          TopLeft="281.666666666667,255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-131.666666666667,115"
              Start="0,0"
              End="-131.666666666667,107.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.4440868865648" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.4440868865648"
                    Point2="0,46.4440868865648"
                    Point3="-4,46.4440868865648" />
                  <mssgle:LineSegment
                    End="-127.666666666667,46.4440868865648" />
                  <mssgle:CubicBezierSegment
                    Point1="-127.666666666667,46.4440868865648"
                    Point2="-131.666666666667,46.4440868865648"
                    Point3="-131.666666666667,50.4440868865648" />
                  <mssgle:LineSegment
                    End="-131.666666666667,107.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-114.024720052083,51.4440868865648,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS.Paths[Derived Column Output]"
          TopLeft="318,180">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Insert data if not exists">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\CATEGORY _STAGE">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO CATEGORY_NDS\CATEGORY_STAGE to CATEGORY_NDS\Check exists in CATEGORY_NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="250,42"
          Id="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS"
          TopLeft="198,213" />
        <NodeLayout
          Size="189,42"
          Id="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists"
          TopLeft="414,365" />
        <NodeLayout
          Size="180,42"
          Id="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Update Data if exists"
          TopLeft="60,370" />
        <NodeLayout
          Size="147,42"
          Id="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Add SourceID"
          TopLeft="241,138" />
        <NodeLayout
          Size="187,42"
          Id="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE"
          TopLeft="227,60" />
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[OLE DB Source Output]"
          TopLeft="317.5,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[Lookup No Match Output]"
          TopLeft="363.333333333333,255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="145.166666666667,110"
              Start="0,0"
              End="145.166666666667,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.4197138314785" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.4197138314785"
                    Point2="0,44.4197138314785"
                    Point3="4,44.4197138314785" />
                  <mssgle:LineSegment
                    End="141.166666666667,44.4197138314785" />
                  <mssgle:CubicBezierSegment
                    Point1="141.166666666667,44.4197138314785"
                    Point2="145.166666666667,44.4197138314785"
                    Point3="145.166666666667,48.4197138314785" />
                  <mssgle:LineSegment
                    End="145.166666666667,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="16.7769466145833,49.4197138314785,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[Lookup Match Output]"
          TopLeft="282.666666666667,255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-132.666666666667,115"
              Start="0,0"
              End="-132.666666666667,107.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.4387917329094" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.4387917329094"
                    Point2="0,46.4387917329094"
                    Point3="-4,46.4387917329094" />
                  <mssgle:LineSegment
                    End="-128.666666666667,46.4387917329094" />
                  <mssgle:CubicBezierSegment
                    Point1="-128.666666666667,46.4387917329094"
                    Point2="-132.666666666667,46.4387917329094"
                    Point3="-132.666666666667,50.4387917329094" />
                  <mssgle:LineSegment
                    End="-132.666666666667,107.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-114.524720052083,51.4387917329094,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS.Paths[Derived Column Output]"
          TopLeft="314.5,180">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.5,33"
              Start="0,0"
              End="8.5,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.5"
                    Point2="0,16.5"
                    Point3="4,16.5" />
                  <mssgle:LineSegment
                    End="4.5,16.5" />
                  <mssgle:CubicBezierSegment
                    Point1="4.5,16.5"
                    Point2="8.5,16.5"
                    Point3="8.5,20.5" />
                  <mssgle:LineSegment
                    End="8.5,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\DIRECTORY_STAGE">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Insert data if not exists">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO DIRECTORY_NDS\DIRECTORY_STAGE to DIRECTORY_NDS\Check exists in DIRECTORY_NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="177,42"
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE"
          TopLeft="227,60" />
        <NodeLayout
          Size="189,42"
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists"
          TopLeft="623.5,334.178571428571" />
        <NodeLayout
          Size="147,42"
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Add SourceID"
          TopLeft="566.12987012987,62.9512987012987" />
        <NodeLayout
          Size="261,42"
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS"
          TopLeft="816.25,68.75" />
        <NodeLayout
          Size="288,42"
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS"
          TopLeft="1208.75,202.5" />
        <NodeLayout
          Size="239,42"
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS"
          TopLeft="448.21428571429,197.198051948052" />
        <NodeLayout
          Size="180,42"
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Update Data if exists"
          TopLeft="330.92857142857,334.892857142857" />
        <NodeLayout
          Size="284,42"
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS"
          TopLeft="1216.25,66.25" />
        <NodeLayout
          Size="297,42"
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1"
          TopLeft="790,197.5" />
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[OLE DB Source Output]"
          TopLeft="404,82.4756493506493">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="162.12987012987,0"
              Start="0,0"
              End="154.62987012987,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="154.62987012987,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup No Match Output]"
          TopLeft="606.21428571429,239.198051948052">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="111.78571428571,94.980519480519"
              Start="0,0"
              End="111.78571428571,87.480519480519">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.3711824335264" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.3711824335264"
                    Point2="0,38.3711824335264"
                    Point3="4,38.3711824335264" />
                  <mssgle:LineSegment
                    End="107.78571428571,38.3711824335264" />
                  <mssgle:CubicBezierSegment
                    Point1="107.78571428571,38.3711824335264"
                    Point2="111.78571428571,38.3711824335264"
                    Point3="111.78571428571,42.3711824335264" />
                  <mssgle:LineSegment
                    End="111.78571428571,87.480519480519" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0.0864704241050021,43.3711824335264,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output4]"
          TopLeft="790,218.349025974026">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-102.78571428571,0"
              Start="0,0"
              End="-95.2857142857099,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-95.2857142857099,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-95.834243861605,5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output3]"
          TopLeft="1208.75,221">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-121.75,0"
              Start="0,0"
              End="-114.25,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-114.25,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-105.31638671875,5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output2]"
          TopLeft="1355.5,108.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,94.25"
              Start="0,0"
              End="0,86.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,86.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,37.5703125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output1]"
          TopLeft="1077.25,88.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="139,0"
              Start="0,0"
              End="131.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="131.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="17.55861328125,5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[Lookup Match Output]"
          TopLeft="529.21428571429,239.198051948052">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-108.28571428572,95.694805194805"
              Start="0,0"
              End="-108.28571428572,88.194805194805">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.6597467370534" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.6597467370534"
                    Point2="0,38.6597467370534"
                    Point3="-4,38.6597467370534" />
                  <mssgle:LineSegment
                    End="-104.28571428572,38.6597467370534" />
                  <mssgle:CubicBezierSegment
                    Point1="-104.28571428572,38.6597467370534"
                    Point2="-108.28571428572,38.6597467370534"
                    Point3="-108.28571428572,42.6597467370534" />
                  <mssgle:LineSegment
                    End="-108.28571428572,88.194805194805" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-102.33424386161,43.6597467370534,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS.Paths[Derived Column Output]"
          TopLeft="713.12987012987,86.8506493506493">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="103.12012987013,0"
              Start="0,0"
              End="95.62012987013,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="95.62012987013,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\PRODUCT_STAGE">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Insert data if not exists">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in BRAND_NDS in NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in PRODUCT_NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in CATEGORY_NDS in NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO PRODUCT_NDS\PRODUCT_STAGE to PRODUCT_NDS\Check exists in DIRECTORY_NDS in NDS 1">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="147,42"
          Id="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Add SourceID"
          TopLeft="241,138" />
        <NodeLayout
          Size="223,42"
          Id="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS"
          TopLeft="198,213" />
        <NodeLayout
          Size="180,42"
          Id="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Update Data if exists"
          TopLeft="60,370" />
        <NodeLayout
          Size="160,42"
          Id="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE"
          TopLeft="229,57" />
        <NodeLayout
          Size="189,42"
          Id="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists"
          TopLeft="414,365" />
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS.Paths[Derived Column Output]"
          TopLeft="312,180">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS.Paths[OLE DB Source Output]"
          TopLeft="311.75,99">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS.Paths[Lookup No Match Output]"
          TopLeft="345.333333333333,255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="163.166666666667,110"
              Start="0,0"
              End="163.166666666667,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.4701691896705" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.4701691896705"
                    Point2="0,44.4701691896705"
                    Point3="4,44.4701691896705" />
                  <mssgle:LineSegment
                    End="159.166666666667,44.4701691896705" />
                  <mssgle:CubicBezierSegment
                    Point1="159.166666666667,44.4701691896705"
                    Point2="163.166666666667,44.4701691896705"
                    Point3="163.166666666667,48.4701691896705" />
                  <mssgle:LineSegment
                    End="163.166666666667,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="25.7769466145833,49.4701691896705,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS.Paths[Lookup Match Output]"
          TopLeft="273.666666666667,255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-123.666666666667,115"
              Start="0,0"
              End="-123.666666666667,107.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.4915405164737" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.4915405164737"
                    Point2="0,46.4915405164737"
                    Point3="-4,46.4915405164737" />
                  <mssgle:LineSegment
                    End="-119.666666666667,46.4915405164737" />
                  <mssgle:CubicBezierSegment
                    Point1="-119.666666666667,46.4915405164737"
                    Point2="-123.666666666667,46.4915405164737"
                    Point3="-123.666666666667,50.4915405164737" />
                  <mssgle:LineSegment
                    End="-123.666666666667,107.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-110.024720052083,51.4915405164737,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Insert data if not exists">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\Check exists in STORE_NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LOAD DATA FROM STAGE TO STORE_NDS\STORE_STAGE to STORE_NDS\STORE_STAGE">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>